<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"----conf ----"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"max players"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8B01C08</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"game mode"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8EC05E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"title"</Description>
          <VariableType>String</VariableType>
          <Length>32</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>subrosadedicated_34c.exe+8B017F4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"---- state ----"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"game state"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8EC0800</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"game timer"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8EC0804</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"game reset"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8B01C2C</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>108</ID>
      <Description>"------ grevelo -------"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"nerf traffic"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(traffic_cars,#64)




[ENABLE]


alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem:

mov [esp+4],traffic_cars

originalcode:
sub esp,0C
cmp dword ptr [subrosadedicated_34c.exe+130202CC],00

exit:
jmp returnhere

"subrosadedicated_34c.exe"+70FD0:
jmp newmem
nop
nop
nop
nop
nop
returnhere:



 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+70FD0:
sub esp,0C
cmp dword ptr [subrosadedicated_34c.exe+130202CC],00
//Alt: db 83 EC 0C 83 3D CC 02 D1 13 00



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"car aim nerf"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(penalty_vehicle,1.75)
define(penalty_driver,1.75) //(stacked)



//-------------------------

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(h_bp0_pb,1A8)
define(hs,3594)

//body
define(pb0,subrosadedicated_34c.exe+91830)
define(pb_weight,0)
define(pb_pos,4)
define(pb_vel,10)
define(pbs,AC)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_type,C)
define(i_h,18)
define(i_pb,48)
define(i_pos,4C)
define(is,1F8)

//item type
define(it0,subrosadedicated_34c.exe+190F8900)
define(it_weight,4)
define(it_type,8)
define(it_grip_cnt,74)
define(it_hand0,78)
define(it_hand1,84)
define(its,D4C)

[ENABLE]

//----body check -------------


alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
      pushad
sub esi,80

    mov ebp,[esi+i_h]
    imul ebp,hs
    //cmp [h0+h_car+ebp],-1
    //je item_body_ret

     mov ecx,[esi+i_type]
     imul ecx,its
     fld [it0+it_weight+ecx]

    cmp [h0+h_car+ebp],-1
    je item_body_mul_skip

     push (float)penalty_vehicle
     push (float)penalty_driver
       cmp [h0+h_seat+ebp],0
       jne item_body_driver_skip
         fmul [esp]
     label(item_body_driver_skip)
     item_body_driver_skip:
         fmul [esp+4]
     add esp,8

     label(item_body_mul_skip)
     item_body_mul_skip:

  mov edx,[esi+i_pb]
  imul edx,pbs
  fstp [pb0+pb_weight+edx]

label(item_body_ret)
item_body_ret:
      popad
originalcode:
mov [esi-7C],00000001

exit:
jmp returnhere

"subrosadedicated_34c.exe"+75F0E:
jmp newmem
nop
nop
returnhere:









 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+75F0E:
mov [esi-7C],00000001
//Alt: db C7 46 84 01 00 00 00

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>107</ID>
          <Description>"grenades fix"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(grenade_type,#13)


//-----------------------------------------------------


//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_bp0_pb,1A8)
//define(h_bp0_p,1AC)
//define(h_bp0_v,2E40)
//define(h_pos,74)
define(h_item_to_drop,33F0)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_type,C)
define(i_h,18)
define(i_pb,48)
define(i_pos,4C)
define(i_timer,E8)
define(i_ammo,F0)
define(is,1F8)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)

[ENABLE]








//------------- item spawn from player's saved slot -------


alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:

cmp [i0+i_type+edx],grenade_type
jne originalcode2

mov [edx+subrosadedicated_34c.exe+8EEFA90],1
jmp exit2

originalcode2:
mov [edx+subrosadedicated_34c.exe+8EEFA90],eax

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+70E6E:
jmp newmem2
nop
returnhere2:



//---------------------- item dropping -------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp [game_state],1
jne originalcode

   push edi
mov edi,[h0+h_item_to_drop+esi]
imul edi,is
cmp [i0+i_type+edi],grenade_type
  jne drop_ret
cmp [i0+i_ammo+edi],0
  jne drop_ret

mov [esi+subrosadedicated_34c.exe+51DE60],0

      pop edi
jmp subrosadedicated_34c.exe+627AD

label(drop_ret)
drop_ret:
      pop edi
originalcode:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DE60],00
    //...
    //jng subrosadedicated_34c.exe+627AD



exit:
jmp returnhere

"subrosadedicated_34c.exe"+626EB:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+70E6E:
mov [edx+subrosadedicated_34c.exe+8EEFA90],eax
//Alt: db 89 82 90 FA 85 09
dealloc(newmem)
"subrosadedicated_34c.exe"+626EB:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DE60],00
//Alt: db 83 BE 60 DE E8 00 00


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"disable grenades while starting"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


define(game_state,subrosadedicated_34c.exe+8EC0800)



alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp [game_state],1
je exit

originalcode:
mov [esi+subrosadedicated_34c.exe+8EEFA90],ebp

exit:
jmp returnhere

"subrosadedicated_34c.exe"+6D777:
jmp newmem
nop
returnhere:





 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+6D777:
mov [esi+subrosadedicated_34c.exe+8EEFA90],ebp
//Alt: db 89 AE 90 FA 16 0A



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"motd_wip (motd.txt)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(round_counter,subrosadedicated_34c.exe+8EC07FC)

define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

[ENABLE]

alloc(mydata,2048)
mydata:
label(s_r)
s_r:
db 'r' 0
label(s_motd_path)
s_motd_path:
db 'm' 'o' 't' 'd' '.' 't' 'x' 't' 0

define(s_motd_msg,mydata+100)
//label(s_motd_msg)
//s_motd_msg:
//db 't' '3' 0




alloc(mycode,2048)
mycode:

push s_r
push s_motd_path
call msvcrt.fopen
add esp,8

cmp eax,0
je init_ret

push eax
push #128
push 1
push s_motd_msg
call msvcrt.fread
add esp,C

call msvcrt.fclose
pop eax


label(init_ret)
init_ret:
ret
createThread(mycode)

//-------------------- round restart -------------



alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:

  cmp ebx,#5380
  jne restart_ret

  mov eax,[round_counter]
  and eax,1
  cmp eax,0
  je restart_ret

  cmp byte ptr [s_motd_msg],0
    je restart_ret

         pushad

push 0
push -1
push s_motd_msg
push 0
call message_func
add esp,10

         popad
  label(restart_ret)
  restart_ret:

originalcode2:
cmp [esp+18],edi
jne subrosadedicated_34c.exe+86964

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86946:
jmp newmem2
nop
returnhere2:



{

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
  cmp byte ptr [s_motd_msg],0
    je restart_ret

         pushad

push 0
push -1
push s_motd_msg
push 0
call message_func
add esp,10

         popad
  label(restart_ret)
  restart_ret:
originalcode:
mov [subrosadedicated_34c.exe+8EC0808],eax

exit:
jmp returnhere

"subrosadedicated_34c.exe"+7D3E4:
jmp newmem
returnhere:
}


 
 
[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+86946:
cmp [esp+18],edi
jne subrosadedicated_34c.exe+86964
//Alt: db 39 7C 24 18 75 18

dealloc(newmem)
"subrosadedicated_34c.exe"+7D3E4:
mov [subrosadedicated_34c.exe+8EC0808],eax
//Alt: db A3 08 08 0B 09

dealloc(mydata)
dealloc(mycode)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"extended commands 2 (4/9)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// /botprank - take control over a limo
// /party - spawn in with bots
//--------------------

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_account,38)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_skin_color,3794)
define(p_skin_hair_color,3798)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(hs,3594)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)

define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id, ?, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)
               //(player_id)

define(player_create_func,subrosadedicated_34c.exe+31AA0)
                //()

[ENABLE]

alloc(tmpbuffer,2048)
alloc(strings,2048)
strings:
label(s_botprank)
s_botprank:
db '/' 'b' 'o' 't' 'p' 'r' 'a' 'n' 'k' 0
label(s_party)
s_party:
db '/' 'p' 'a' 'r' 't' 'y' 0

//---------------- custom admin commands --------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
               add esp,148
             pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /botprank
  push ecx
push 9
push s_botprank
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

imul ebx,ecx,ps //p*

xor eax,eax //p
xor edx,edx //p*
label(custom_bot_loop)
custom_bot_loop:
  cmp [p0+edx],0
    je custom_bot_next
  cmp eax,ecx
    je custom_bot_next
  cmp [p0+p_account+edx],-1
    jne custom_bot_next
            mov ebp,[p0+p_h+edx]
            mov [p0+p_h+ebx],ebp
            mov [p0+edx],0
          jmp custom_ret
label(custom_bot_next)
custom_bot_next:
  add edx,ps
  inc eax
  cmp eax,players_max
  jle custom_bot_loop


jmp custom_ret
label(custom_a1)
custom_a1:
//------------------------- /party

  push ecx
push 6
push s_party
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

//---- player's character -------

imul ebx,ecx,ps //p*
  mov [p0+p_team+ebx],3
    mov [p0+p_suit_color+ebx],8
    mov [p0+p_skin_hair_color+ebx],5
    //mov [p0+p_skin_color+ebx],6
        pushad
     push ecx
     call player_sync_func
     add esp,4
        popad



push (float)100.0
push (float)100.0
push (float)100.0
mov esi,esp //position

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edi,esp  //orientation

  push ecx
  push edi
  push esi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop ecx
    add esp,30

imul ebx,ecx,ps //p*
mov [p0+p_h+ebx],eax

//--------- vehicle --------------
            push eax
            push ecx

push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

push (float)1000.0
push (float)30.0
push (float)1000.0
mov edi,esp //position

push 1
push esi
push 0
push edi
push 7
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

             pop ecx
             pop edx
       imul ebx,edx,hs
       mov [h0+h_car+ebx],eax


//-------------- bots

    mov edx,eax
mov ecx,#10
label(party_bots_loop)
party_bots_loop:
    push ecx
    push edx

  call player_create_func
  imul ebx,eax,ps

//----- bot's character

push (float)100.0
push (float)100.0
push (float)100.0
mov esi,esp //position

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edi,esp  //orientation

  push eax
  push edi
  push esi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop ebp
    add esp,30


    //guns --------------------
                 pushad
    push 6
    push 3
    push eax
    call arm_func
    add esp,C
               //(character, weapon, amount of mags)
                 popad
   //--------------------------

   mov edx,[esp]

   imul ebx,eax,hs
   mov [h0+h_car+ebx],edx
push eax
       pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
       popad
   mov [h0+h_seat+ebx],eax
pop eax

    imul ebx,ebp,ps
    mov [p0+p_h+ebx],eax
    mov [p0+p_team+ebx],3

    mov [p0+2D00+ebx],1
    mov [p0+3790+ebx],1
    mov [p0+37A8+ebx],1
    mov [p0+37A4+ebx],2

    mov [p0+p_suit_color+ebx],8
    mov [p0+p_skin_hair_color+ebx],5
    mov [p0+p_skin_color+ebx],6

    push ebp
    call player_sync_func
    pop ebp





    pop edx
    pop ecx
label(party_bots_next)
party_bots_next:
dec ecx
cmp ecx,0
jg party_bots_loop


jmp custom_ret
label(custom_a2)
custom_a2:




label(custom_ret)
custom_ret:
             popad
               sub esp,148
originalcode:
mov eax,[subrosadedicated_34c.exe+8DDA4]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+61976:
jmp newmem
returnhere:





 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+61976:
mov eax,[subrosadedicated_34c.exe+8DDA4]
//Alt: db A1 A4 DD 47 00



dealloc(tmpbuffer)
dealloc(strings)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"geoip"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

define(last_joined_ip,subrosadedicated_34c.exe+2B16C1A8)

alloc(strings,2048)
strings:
label(s_geoip)
s_geoip:
db 'r' 'e' 't' 'u' 'r' 'n' ' ' 'g' 'e' 'o' 'i' 'p' '(' 'p' 'a' 'r' 'a' 'm' 'e' 't' 'e' 'r' ')' 0
label(CELUA_ServerName)
CELUA_ServerName:
db 'C' 'E' 'L' 'U' 'A' 'S' 'E' 'R' 'V' 'E' 'R' 0

alloc(tmpbuffer_geoip,4096)
registersymbol(tmpbuffer_geoip)

loadlibrary(luaclient-i386.dll)
luacall(openLuaServer('CELUASERVER'))



alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
        pushad

push eax
push tmpbuffer_geoip
call msvcrt.strcpy
add esp,8

push [last_joined_ip]
push s_geoip
call CELUA_ExecuteFunction

lea eax,[tmpbuffer_geoip]
mov [esp+24],eax

        popad


originalcode:
call subrosadedicated_34c.exe+7070

exit:
jmp returnhere

"subrosadedicated_34c.exe"+72827:
jmp newmem
returnhere:



{$lua}

--currentdir = readString("subrosadedicated.exe+907AC80",256)..'\\'
currentdir = "E:\\SteamLibrary\\steamapps\\common\\Sub Rosa\\"

local geodb = require(currentdir.."geoip\\mmdblua\\mmdb\\init")
                .open(currentdir.."geoip\\GeoLite2-Country.mmdb")

function dump(o)
   if type(o) == 'table' then
      local s = '{ '
      for k,v in pairs(o) do
         if type(k) ~= 'number' then k = '"'..k..'"' end
         s = s .. '['..k..'] = ' .. dump(v) .. ','
      end
      return s .. '} '
   else
      return tostring(o)
   end
end

-- https://github.com/fengpeiyuan/ipconv/blob/master/ipconv.lua
local bit = require(currentdir.."geoip\\bitopt")
function ip2Str(i)
   local ret = math.floor(bit:band(i,0xFF))                .. "."
            .. math.floor(bit:band(bit:rshift(i,8 ),0xFF)) .. "."
            .. math.floor(bit:band(bit:rshift(i,16),0xFF)) .. "."
            .. math.floor(bit:band(bit:rshift(i,24),0xFF))
   return ret
end

function geoip(ip_i)
         ip_i = readInteger("subrosadedicated_34c.exe+2B16C1A8")
  local str
  if not (ip_i == 0) then
    tmpstring = getAddress("tmpbuffer_geoip")
    ip = ip2Str(ip_i)
    info = geodb:search_ipv4(ip)
    if info then
      str = readString(tmpstring,256).." from "..info["country"]["names"]["en"]
    else
      str = readString(tmpstring,256).." from Localhost"
    end
  else
    str = "[geoip error ("..tostring(ip_i)..")]"
  end
  --print(dump(info))
  writeString(tmpstring,str)
  writeBytes(tmpstring+string.len(str),0)
 return 0
end


{$asm}
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+72827:
call subrosadedicated_34c.exe+7070
//Alt: db E8 44 48 F9 FF

dealloc(strings)
dealloc(tmpbuffer_geoip)

unregistersymbol(tmpbuffer_geoip)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"make every gun displayed as uzi v2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_body,4)
define(i_type,C)
define(i_despawn,14)
define(i_timer,E8)
define(i_ammo,F0)
define(i_h,18)


[ENABLE]




alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp [i0+i_h+ecx],-1
je originalcode

mov edi,[i0+i_type+ecx]

cmp edi,1 //ak
je fix_apply
cmp edi,3 //m16
je fix_apply
cmp edi,5 //magnum
je fix_apply
cmp edi,7 //mp5
je fix_apply
cmp edi,b //9mm
je fix_apply

jmp originalcode

label(fix_apply)
fix_apply:

mov edi,9 //uzi
/*
    pushad
call msvcrt.rand
and eax,7
mov [esp+0],eax
    popad
*/

jmp exit

originalcode:
mov edi,[ecx+subrosadedicated_34c.exe+8EEF9AC]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+71DB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+71DB:
mov edi,[ecx+subrosadedicated_34c.exe+8EEF9AC]
//Alt: db 8B B9 AC F9 E9 09




</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"burger burgers"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(burger_count,#24)

define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)

[ENABLE]

alloc(mycode,2048)
mycode:
label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret





alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
                pushad
xor ecx,ecx
label(burger_loop)
burger_loop:


push ecx
//------------------------------ burger ------------------

push (float)0.0
push (float)1.0
push (float)0.0
  push (float)0.0
  push (float)0.0
  push (float)1.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp

imul eax,ecx,C
push (float)1478.8
push (float)51.7
push (float)1460.6
mov edi,esp


push 0
push 0
push 0
mov ebp,esp
                pushad
                push (float)0.2
                push (float)0.5
      call frand1
        fsub [esp]
        fmul [esp+4]
        fstp [esp+28]
      call frand1
        fmul [esp+4]
        fstp [esp+2C]
      call frand1
        fsub [esp]
        fmul [esp+4]
        fstp [esp+30]
                pop eax
                pop eax
                popad


push esi
push ebp
push edi
push 1D
call item_spawn_func
               //(int item_type, float *pos, [float* velocity], float *orientation)
add esp,10+3C


//----------------------------------------------------------
pop ecx



label(burger_next)
burger_next:
inc ecx
cmp ecx,burger_count
jle burger_loop

               popad
originalcode:
mov ecx,[subrosadedicated_34c.exe+8EC080C]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+86DDB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+86DDB:
mov ecx,[subrosadedicated_34c.exe+8EC080C]
//Alt: db 8B 0D 0C 08 E7 09

dealloc(mycode)


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"push items from dead people"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_pos,74)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_owner,18)
define(i_body,48)
define(is,1F8)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

[ENABLE]



alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
  mov eax,[i0+i_owner+edi]
  cmp eax,-1
  je originalcode

    imul eax,hs
    cmp [h0+h_health0+eax],0
    jg originalcode

     mov eax,[i0+i_body+edi]
     imul eax,pbs

      push (float)0.05
      push (float)0.3
      //y
       fld [esp]
       fadd [pb0+pb_pos+4+eax]
       fstp [pb0+pb_pos+4+eax]
      //vy
       fld [esp+4]
       fadd [pb0+pb_vel+4+eax]
       fstp [pb0+pb_vel+4+eax]
      add esp,8
          //mov [i0+4+edi],0
          //mov [i0+8+edi],1

originalcode:
mov [edi+subrosadedicated_34c.exe+8EEF9B8],FFFFFFFF

exit:
jmp returnhere

"subrosadedicated_34c.exe"+21C24:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+21C24:
mov [edi+subrosadedicated_34c.exe+8EEF9B8],FFFFFFFF
//Alt: db C7 87 B8 F9 E5 09 FF FF FF FF


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"antistack"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(count_cap,3)


[ENABLE]

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_admin,30)
define(p_team,70)
define(ps,3818)
define(players_max,#128)


alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

  pushad

push 0 //player count
push 0
push 0

mov ecx,players_max
xor eax,eax
label(count_loop)
count_loop:
  cmp [p0+eax],0
    je count_next
  mov edx,[p0+p_team+eax]
  cmp edx,2
    jg count_next

   inc [esp+edx*4]

label(count_next)
count_next:
  add eax,ps
  //loop count_loop
  dec ecx
    cmp ecx,0
    jge count_loop

//-------

cmp esi,1
  je count_check_1
cmp esi,2
  je count_check_2

     mov eax,[esp]
      sub eax,[esp+4]
      cmp eax,count_cap
      jg exit
     mov eax,[esp]
      sub eax,[esp+8]
      cmp eax,count_cap
      jg exit

jmp originalcode
  label(count_check_1)
  count_check_1:

     mov eax,[esp+4]
      sub eax,[esp+8]
      cmp eax,count_cap
      jg exit
     mov eax,[esp+4]
      sub eax,[esp]
      cmp eax,count_cap
      jg exit

jmp originalcode
  label(count_check_2)
  count_check_2:

     mov eax,[esp+8]
      sub eax,[esp]
      cmp eax,count_cap
      jg exit
     mov eax,[esp+8]
      sub eax,[esp+4]
      cmp eax,count_cap
      jg exit


originalcode:
mov [ebx+subrosadedicated_34c.exe+13728E10],esi

exit:
  add esp,C
  popad
jmp returnhere

"subrosadedicated_34c.exe"+77632:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+77632:
mov [ebx+subrosadedicated_34c.exe+13728E10],esi
//Alt: db 89 B3 10 8E 9A 14

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"cheap vehicles. (75% off turbo and beamer)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(vt0,subrosadedicated_34c.exe+AD17740)
define(vt_price,30)
define(vts,18548)

[ENABLE]

alloc(mycode,2048)
mycode:

mov ebx,0 //Town Car
imul ebx,vts
mov [vt0+vt_price+ebx],#1000

mov ebx,4 //Turbo
imul ebx,vts
mov [vt0+vt_price+ebx],#5000

mov ebx,5 //Turbo S
imul ebx,vts
mov [vt0+vt_price+ebx],#10000

mov ebx,6 //Beamer
imul ebx,vts
mov [vt0+vt_price+ebx],#2500

mov ebx,7 //Van
imul ebx,vts
mov [vt0+vt_price+ebx],#2000

mov ebx,E //Hatchback
imul ebx,vts
mov [vt0+vt_price+ebx],#1500

mov ecx,#24
xor ebx,ebx
label(shop_loop)
shop_loop:

 mov [ebx+subrosadedicated_34c.exe+202F08A4],0

add ebx,#16
loop shop_loop

ret
createThread(mycode)
 
[DISABLE]

dealloc(mycode)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"---- sru ----"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"remove traffic"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(traffic_cars,#0)




[ENABLE]


alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem:

mov [esp+4],traffic_cars

originalcode:
sub esp,0C
cmp dword ptr [subrosadedicated_34c.exe+130202CC],00

exit:
jmp returnhere

"subrosadedicated_34c.exe"+70FD0:
jmp newmem
nop
nop
nop
nop
nop
returnhere:



 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+70FD0:
sub esp,0C
cmp dword ptr [subrosadedicated_34c.exe+130202CC],00
//Alt: db 83 EC 0C 83 3D CC 02 D1 13 00



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"disable goldmen"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]



alloc(newmem,512)
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp esi,0
je exit

originalcode:
mov [ebx+subrosadedicated_34c.exe+13728E10],esi

exit:
jmp returnhere

"subrosadedicated_34c.exe"+77632:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+77632:
mov [ebx+subrosadedicated_34c.exe+13728E10],esi
//Alt: db 89 B3 10 8E 41 14


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"dual grip"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//item type
define(it0,subrosadedicated_34c.exe+190F8900)
define(it_type,8)
define(it_grip_cnt,74)
define(it_hand0,78)
define(it_hand1,84)
define(its,D4C)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_zoom,54)
define(h_pos,74)
define(h_controls,19C)
define(h_controls_last,1A0)
define(hs,3594)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_h,84)
define(p_slot0,18A4)
define(p_slotsize,64)
define(ps,3818)
define(players_max,#96)


//------- initialize values ------------------------

alloc(mycode,2048)
mycode:


mov ebx,B //9mm
imul ebx,its
mov [it0+it_hand1+4+ebx],(float)-0.11
//mov [it0+it_hand1+8+ebx],(float)-0.06
mov [it0+it_hand1+8+ebx],(float)0.02


ret

createThread(mycode)


//---------------- on grips check ----------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp [edx+subrosadedicated_34c.exe+190F8974],edi
jg subrosadedicated_34c.exe+639F6

   push ebx
mov ebx,[h0+h_controls+esi]
and ebx,80000
cmp ebx,0
je grip_ret

    cmp [it0+it_type+edx],1
    jne grip_ret

//cmp [h0+h_zoom+esi],2
//je grip_ret

  pop ebx
jmp subrosadedicated_34c.exe+639F6

label(grip_ret)
grip_ret:
   pop ebx

originalcode:
//cmp [edx+subrosadedicated_34c.exe+190F8974],edi
  //jg subrosadedicated_34c.exe+639F6


exit:
jmp returnhere

"subrosadedicated_34c.exe"+639E9:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+639E9:
cmp [edx+subrosadedicated_34c.exe+190F8974],edi
//Alt: db 39 BA 74 89 37 1A

dealloc(mycode)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"force ready up"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_ready,44)
define(ps,3818)
define(players_max,#96)

[ENABLE]

alloc(mycode,2048)
mycode:

mov ecx,players_max
xor ebx,ebx
label(init_players)
init_players:

  mov [p0+p_ready+ebx],1

add ebx,ps
loop init_players

ret
createThread(mycode)

[DISABLE]

dealloc(mycode)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"make /arm take item id instead of weapon"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

subrosadedicated_34c.exe+6230A:
db 90 90
 
[DISABLE]

subrosadedicated_34c.exe+6230A:
jne subrosadedicated_34c.exe+62310

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"give everyone a car"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(car_type,0)


//---------------------------------------------




//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_ready,44)
define(p_team,70)
define(p_h,84)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(hs,3594)


define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)


[ENABLE]







alloc(mycode,2048)
mycode:

xor ecx,ecx //p
xor ebx,ebx //p*
label(init_players_loop)
init_players_loop:
  cmp [p0+ebx],0
    je init_players_next
  mov edx,[p0+p_h+ebx] //h
  cmp edx,-1
    je init_players_next
  cmp [p0+p_team+ebx],6
    je init_players_next
  cmp [p0+p_team+ebx],7
    je init_players_next
  imul eax,edx,hs //h*
  cmp [h0+h_car+eax],-1
  jne init_players_next

      push eax
      push ebx
      push ecx

push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

push [h0+h_pos+eax+8]
push [h0+h_pos+eax+4]
push [h0+h_pos+eax+0]
mov edi,esp //position

  mov ebp,[p0+p_team+ebx]
  add ebp,3
push ebp
push esi
push 0
push edi
push car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

      pop ecx
      pop ebx
      pop edx //h*

mov [h0+h_car+edx],eax
mov [h0+h_seat+edx],0

label(init_players_next)
init_players_next:
  add ebx,ps
  inc ecx
  cmp ecx,players_max
  jle init_players_loop


ret
createThread(mycode)
 
 
[DISABLE]





</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"bridge jumping"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(mydata,subrosadedicated_34c.exe+80E5000)
define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(h_bp0_pb,1A8)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)

define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)


[ENABLE]




alloc(mycode,2048)
mycode:

    mov [arena_spawn+0+0],(float)1368.7
    mov [arena_spawn+0+4],(float)48.8
    mov [arena_spawn+0+8],(float)1440.3
     mov [arena_spawn+C+0],(float)1368.7
     mov [arena_spawn+C+4],(float)48.8
     mov [arena_spawn+C+8],(float)1440.3
    mov [arena_spawn+18+0],(float)1368.7
    mov [arena_spawn+18+4],(float)48.8
    mov [arena_spawn+18+8],(float)1440.3

ret
createThread(mycode)

//------------------- getting in a car ---------------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:

cmp ebx,0 //seat
je originalcode2

mov [h0+h_car+esi],-1
jmp exit2

originalcode2:
mov [esi+subrosadedicated_34c.exe+51AAA4],ecx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+821AA:
jmp newmem2
nop
returnhere2:



//--------------------- update -----------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
           pushad
mov ecx,players_max
xor ebx,ebx
label(update_players)
update_players:

cmp [p0+ebx],0
 je update_players_next
cmp [p0+p_h+ebx],-1
 je update_players_next

mov edx,[p0+p_h+ebx] //h
imul ebp,edx,hs //h*
 cmp [h0+h_car+ebp],-1
   jne update_players_next

push (float)1370.0 //x
push (float)1435.0 //z
push (float)1365.0 //x
push (float)1375.0
push (float)1416.0 //z
push (float)1463.0

//player.x &lt; roof.x1
  fld [h0+h_pos+0+ebp]
   fld [esp+C]
      fcomip st(1)
      fstp st(0)
      ja apply_bounds
//player.x &gt; roof.x2
  fld [h0+h_pos+0+ebp]
   fld [esp+8]
      fcomip st(1)
      fstp st(0)
      jb apply_bounds
//player.z &lt; roof.z1
  fld [h0+h_pos+8+ebp]
   fld [esp+4]
      fcomip st(1)
      fstp st(0)
      ja apply_bounds
//player.z &gt; roof.z2
  fld [h0+h_pos+8+ebp]
   fld [esp]
      fcomip st(1)
      fstp st(0)
      jb apply_bounds

jmp skip_bounds
label(apply_bounds)
apply_bounds:

mov eax,[h0+h_bp0_pb+ebp]
imul eax,pbs

   //fld1
   //fstp [pb0+pb_vel+eax+4]

 fld [esp+14]
  fsub [pb0+pb_pos+eax]
  //fchs
  fdiv [esp]
  fstp [pb0+pb_vel+eax]
 fld [esp+10]
  fsub [pb0+pb_pos+eax+8]
  //fchs
  fdiv [esp]
  fstp [pb0+pb_vel+eax+8]


label(skip_bounds)
skip_bounds:
add esp,18


label(update_players_next)
update_players_next:
add ebx,ps
dec ecx
cmp ecx,0
jge update_players

           popad
originalcode:
mov eax,[subrosadedicated_34c.exe+8EC0800]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+86675:
jmp newmem
returnhere:

 
 
[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+821AA:
mov [esi+subrosadedicated_34c.exe+51AAA4],ecx
//Alt: db 89 8E A4 AA 02 01
dealloc(newmem)
"subrosadedicated_34c.exe"+86675:
mov eax,[subrosadedicated_34c.exe+8EC0800]
//Alt: db A1 00 08 9D 09

dealloc(mycode)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"melee fight 4/26"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(punch_knockback,0.4)
//define(punch_knockback,1.0)
define(punch_damage,20.0)

//--------------------------

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(h_controls,19C)
define(h_controls_last,1A0)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)
  define(p__zombie,34FC)


//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_drunkness,6C)
define(h_health0,34)
define(h_health1,3348)
define(h_health2,334C)
define(h_bleeding,3350)
define(h_pos,74)
define(h_bp0_pb,1A8)
define(h_bps,12C)
define(h_walk_dir,2E40)
define(h_grab0,3230)
define(h_grab1,325C)
define(h_grab_h,4)
define(h_grab_bp,C)
    define(h__zombie,2DCC)
define(hs,3594)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)


[ENABLE]








//-------------- grab check -----------------

alloc(newmem9,4096)
label(returnhere9)
label(originalcode9)
label(exit9)

//edx = hand limb
newmem9:

//cmp [edi+subrosadedicated_34c.exe+51DCB4],1
//je exit9
      pushad
mov eax,[esp+4C+20]
mov ebp,[h0+h_controls+eax]
and ebp,80000
cmp ebp,0
je grab_ret

//-------- todo: cooldown

mov edi,edx
imul edi,h_bps
mov edi,[h0+h_bp0_pb+eax+edi] //hand pb
imul edi, pbs

mov edx,ebx
imul edx,h_bps
imul ecx,hs
mov esi,[h0+h_bp0_pb+ecx+edx] //limb pb
imul esi,pbs

//apply force
push (float)punch_knockback
  fld [pb0+pb_vel+0+edi]
  fmul [esp]
    fadd [pb0+pb_vel+0+esi]
    fstp [pb0+pb_vel+0+esi]
  fld [pb0+pb_vel+4+edi]
  fmul [esp]
    fadd [pb0+pb_vel+4+esi]
    fstp [pb0+pb_vel+4+esi]
  fld [pb0+pb_vel+8+edi]
  fmul [esp]
    fadd [pb0+pb_vel+8+esi]
    fstp [pb0+pb_vel+8+esi]

                  //add esp,4
                  //jmp grab_affect

//magnitude
fld [pb0+pb_vel+0+edi]
  fmul st(0)
fld [pb0+pb_vel+4+edi]
  fmul st(0)
fld [pb0+pb_vel+8+edi]
  fmul st(0)
faddp
faddp
fsqrt
mov [esp],(float)punch_damage
fmul [esp]
fchs
add esp,4
             //fstp st(0)
             //jmp grab_affect
//apply damage

     //fiadd [h0+h_health1+ecx]
     //fist  [h0+h_health1+ecx]
cmp ebx,0
  je punch_dmg_crotch
cmp ebx,1
  je punch_dmg_torso
cmp ebx,2
  je punch_dmg_torso
cmp ebx,3
  je punch_dmg_head

cmp ebx,4
  je punch_dmg_larm
cmp ebx,5
  je punch_dmg_larm
cmp ebx,6
  je punch_dmg_larm
cmp ebx,7
  je punch_dmg_rarm
cmp ebx,8
  je punch_dmg_rarm
cmp ebx,9
  je punch_dmg_rarm
cmp ebx,#10
  je punch_dmg_lleg
cmp ebx,#11
  je punch_dmg_lleg
cmp ebx,#12
  je punch_dmg_lleg
cmp ebx,#13
  je punch_dmg_rleg
cmp ebx,#14
  je punch_dmg_rleg
cmp ebx,#15
  je punch_dmg_rleg

label(punch_dmg_crotch)
punch_dmg_crotch:
{
        fld [pb0+pb_vel+0+edi]
        fadd [h0+h_walk_dir+0+ecx]
        fld [pb0+pb_vel+4+edi]
        fabs
        fadd [h0+h_walk_dir+4+ecx]
        fld [pb0+pb_vel+8+edi]
        fadd [h0+h_walk_dir+8+ecx]
    cmp [h0+h_drunkness+ecx],#80
    jg grab_affect
  add [h0+h_drunkness+ecx],screen_blackening
}
    fstp st(0)
jmp grab_affect

label(punch_dmg_torso)
punch_dmg_torso:
{
  fiadd [h0+h_health1+8+ecx]
  fistp [h0+h_health1+8+ecx]
}
                 push eax
                  fist [esp]
                  cmp [esp],-8
                 pop eax
  fiadd [h0+h_health2+8+ecx]
  fistp [h0+h_health2+8+ecx]
                 jg grab_affect
                mov [h0+h_bleeding+ecx],1
jmp grab_affect

label(punch_dmg_head)
punch_dmg_head:
{
  fiadd [h0+h_health2+10+ecx]
  fistp [h0+h_health2+10+ecx]
    cmp [h0+h_drunkness+ecx],#80
    jg grab_affect
  add [h0+h_drunkness+ecx],screen_blackening
}
  fld st(0)
  fiadd [h0+h_health2+10+ecx]
  fistp [h0+h_health2+10+ecx]
  fchs
   fadd st(0)
   fadd st(0)
  fiadd [h0+h_drunkness+ecx]
  fistp [h0+h_drunkness+ecx]
jmp grab_affect

label(punch_dmg_larm)
punch_dmg_larm:
  fiadd [h0+h_health2+18+ecx]
  fistp [h0+h_health2+18+ecx]
  //fstp st(0)
jmp grab_affect

label(punch_dmg_rarm)
punch_dmg_rarm:
  fiadd [h0+h_health2+20+ecx]
  fistp [h0+h_health2+20+ecx]
  //fstp st(0)
jmp grab_affect

label(punch_dmg_lleg)
punch_dmg_lleg:
  fiadd [h0+h_health2+28+ecx]
  fistp [h0+h_health2+28+ecx]
  //fstp st(0)
jmp grab_affect

label(punch_dmg_rleg)
punch_dmg_rleg:
  fiadd [h0+h_health2+30+ecx]
  fistp [h0+h_health2+30+ecx]
  //fstp st(0)
jmp grab_affect


label(grab_affect)
grab_affect:
     popad
 mov [edi+subrosadedicated_34c.exe+51DCB4],0
jmp exit9


label(grab_ret)
grab_ret:
     popad
originalcode9:
mov [edi+subrosadedicated_34c.exe+51DCB4],00000001

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+3D8E2:
jmp newmem9
nop
nop
nop
nop
nop
returnhere9:







//-------------- grab check duplicate thing ----


alloc(newmem15,2048)
label(returnhere15)
label(originalcode15)
label(exit15)
//ebx = hand
newmem15:

      pushad
                mov ecx,[esp+B4+20] //ecx = dst_h
                mov edx,ebx //edx = hand
                mov ebx,[esp+44+20] //ebx = limb
mov eax,[esp+2C+20] //eax = src_h
mov ebp,[h0+h_controls+eax]
and ebp,80000
cmp ebp,0
je grab2_ret

//-------- todo: cooldown

mov edi,edx
imul edi,h_bps
mov edi,[h0+h_bp0_pb+eax+edi] //edi = hand pb
imul edi, pbs

mov edx,ebx
imul edx,h_bps
imul ecx,hs
mov esi,[h0+h_bp0_pb+ecx+edx] //esi = limb pb
imul esi,pbs

//apply force
push (float)punch_knockback
  fld [pb0+pb_vel+0+edi]
  fmul [esp]
    fadd [pb0+pb_vel+0+esi]
    fstp [pb0+pb_vel+0+esi]
  fld [pb0+pb_vel+4+edi]
  fmul [esp]
    fadd [pb0+pb_vel+4+esi]
    fstp [pb0+pb_vel+4+esi]
  fld [pb0+pb_vel+8+edi]
  fmul [esp]
    fadd [pb0+pb_vel+8+esi]
    fstp [pb0+pb_vel+8+esi]

                  //add esp,4
                  //jmp grab2_affect

//magnitude
fld [pb0+pb_vel+0+edi]
  fmul st(0)
fld [pb0+pb_vel+4+edi]
  fmul st(0)
fld [pb0+pb_vel+8+edi]
  fmul st(0)
faddp
faddp
fsqrt
mov [esp],(float)punch_damage
fmul [esp]
fchs
add esp,4
             //fstp st(0)
             //jmp grab_affect
//apply damage

     //fiadd [h0+h_health1+ecx]
     //fist  [h0+h_health1+ecx]
cmp ebx,0
  je punch2_dmg_crotch
cmp ebx,1
  je punch2_dmg_torso
cmp ebx,2
  je punch2_dmg_torso
cmp ebx,3
  je punch2_dmg_head
cmp ebx,4
  je punch2_dmg_larm
cmp ebx,5
  je punch2_dmg_larm
cmp ebx,6
  je punch2_dmg_larm
cmp ebx,7
  je punch2_dmg_rarm
cmp ebx,8
  je punch2_dmg_rarm
cmp ebx,9
  je punch2_dmg_rarm
cmp ebx,#10
  je punch2_dmg_lleg
cmp ebx,#11
  je punch2_dmg_lleg
cmp ebx,#12
  je punch2_dmg_lleg
cmp ebx,#13
  je punch2_dmg_rleg
cmp ebx,#14
  je punch2_dmg_rleg
cmp ebx,#15
  je punch2_dmg_rleg

label(punch2_dmg_crotch)
punch2_dmg_crotch:
{
        fld [pb0+pb_vel+0+edi]
        fadd [h0+h_walk_dir+0+ecx]
        fld [pb0+pb_vel+4+edi]
        fabs
        fadd [h0+h_walk_dir+4+ecx]
        fld [pb0+pb_vel+8+edi]
        fadd [h0+h_walk_dir+8+ecx]
    cmp [h0+h_drunkness+ecx],#80
    jg grab2_affect
  add [h0+h_drunkness+ecx],screen_blackening
}
    fstp st(0)
jmp grab2_affect

label(punch2_dmg_torso)
punch2_dmg_torso:
                 push eax
                  fist [esp]
                  cmp [esp],-8
                 pop eax
  fiadd [h0+h_health2+8+ecx]
  fistp [h0+h_health2+8+ecx]
                 jg grab2_affect
                mov [h0+h_bleeding+ecx],1
jmp grab2_affect

label(punch2_dmg_head)
punch2_dmg_head:
  fld st(0)
  fiadd [h0+h_health2+10+ecx]
  fistp [h0+h_health2+10+ecx]
    //cmp [h0+h_drunkness+ecx],#80
    //jg grab2_affect
  //add [h0+h_drunkness+ecx],screen_blackening
  fchs
   fadd st(0)
   fadd st(0)
  fiadd [h0+h_drunkness+ecx]
  fistp [h0+h_drunkness+ecx]
jmp grab2_affect

label(punch2_dmg_larm)
punch2_dmg_larm:
  fiadd [h0+h_health2+18+ecx]
  fistp [h0+h_health2+18+ecx]
  //fstp st(0)
jmp grab2_affect

label(punch2_dmg_rarm)
punch2_dmg_rarm:
  fiadd [h0+h_health2+20+ecx]
  fistp [h0+h_health2+20+ecx]
  //fstp st(0)
jmp grab2_affect

label(punch2_dmg_lleg)
punch2_dmg_lleg:
  fiadd [h0+h_health2+28+ecx]
  fistp [h0+h_health2+28+ecx]
  //fstp st(0)
jmp grab2_affect

label(punch2_dmg_rleg)
punch2_dmg_rleg:
  fiadd [h0+h_health2+30+ecx]
  fistp [h0+h_health2+30+ecx]
  //fstp st(0)
jmp grab2_affect





label(grab2_affect)
grab2_affect:
     popad
 mov [esi+subrosadedicated_34c.exe+51DCB4],0
jmp exit15

label(grab2_ret)
grab2_ret:
     popad
originalcode15:
mov [esi+subrosadedicated_34c.exe+51DCB4],00000001

exit15:
jmp returnhere15

"subrosadedicated_34c.exe"+3D9FF:
jmp newmem15
nop
nop
nop
nop
nop
returnhere15:



//----------- arm extension check -----------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
   push ebx
mov ebx,[h0+h_controls+esi]
and ebx,80000
cmp ebx,0
   pop ebx
je extend_ret

fld dword ptr [subrosadedicated_34c.exe+8A7F8]
jmp exit

label(extend_ret)
extend_ret:

originalcode:
cmp ecx,eax
jne subrosadedicated_34c.exe+645CC
fld dword ptr [subrosadedicated_34c.exe+8A7F8]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+64564:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

//------------ arm extension params -------------

subrosadedicated_34c.exe+64585:
db 90 90


alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
       pushfd
   push ebx
   push ebp
   push edx

mov edx,1
jp extend_params_high
  xor edx,edx
label(extend_params_high)
extend_params_high:

mov ebx,[h0+h_controls+esi]
and ebx,80000
cmp ebx,0
je extend_params_ret

  mov ebx,ebp
  mov ebp,2
  sub ebp,ebx
mov ebx,[h0+h_controls+esi]
and ebx,ebp
cmp ebx,0
jne extend_params_punch

//----- block

   push (float)0.1
   push (float)0.4
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
fmul [esp+4]
fadd [esp]
   add esp,8
jmp extend_params_ret


//------ punch

label(extend_params_punch)
extend_params_punch:

 cmp edx,1
 je extend_params_highpunch

   push (float)0.9
   push (float)0.9
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
fmul [esp+4]
fadd [esp]
   add esp,8
jmp extend_params_ret

//----- high punch

label(extend_params_highpunch)
extend_params_highpunch:

   push (float)0.2
   push (float)0.9
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
fmul [esp+4]
fadd [esp]
   add esp,8
jmp extend_params_ret



  label(extend_params_ret)
  extend_params_ret:
     pop edx
     pop ebp
     pop ebx
         popfd
jmp subrosadedicated_34c.exe+64599


originalcode2:
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+64587:
jmp newmem2
nop
returnhere2:



//--------------- arm extension yaw -----------
{
alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:
mov eax,[h0+h_controls+esi]
and eax,80000
cmp eax,0

je extend_yaw_ret


        test ebp,ebp
    jne extend_yaw_arm1
        //fld dword ptr [subrosadedicated_34c.exe+8A884] //[0.09]
        //fstp dword ptr [esp+14]
        mov [esp+14],(float)0.5
             and eax,1
             cmp eax,0
             jne subrosadedicated_34c.exe+645D0
        mov [esp+14],(float)0.06
        jmp subrosadedicated_34c.exe+645D0
    label(extend_yaw_arm1)
    extend_yaw_arm1:
        //fld dword ptr [subrosadedicated_34c.exe+8A86C] //[-0.09]
        //fstp dword ptr [esp+14]
        mov [esp+14],(float)-0.06
           fchs
      jmp subrosadedicated_34c.exe+645D0


label(extend_yaw_ret)
extend_yaw_ret:


originalcode5:
test ebp,ebp
jne subrosadedicated_34c.exe+645C0
fld dword ptr [subrosadedicated_34c.exe+8A884]

//subrosadedicated_34c.exe+645B0 - test ebp,ebp
//subrosadedicated_34c.exe+645B2 - jne subrosadedicated_34c.exe+645C0
//subrosadedicated_34c.exe+645B4 - fld dword ptr [subrosadedicated_34c.exe+8A884] //[0.09]
//subrosadedicated_34c.exe+645BA - fstp dword ptr [esp+14]
//subrosadedicated_34c.exe+645BE - jmp subrosadedicated_34c.exe+645D0
//subrosadedicated_34c.exe+645C0 - fld dword ptr [subrosadedicated_34c.exe+8A86C] //[-0.09]
//subrosadedicated_34c.exe+645C6 - fstp dword ptr [esp+14]

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+645B0:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:
}



[DISABLE]
dealloc(newmem15)
"subrosadedicated_34c.exe"+3D9FF:
mov [esi+subrosadedicated_34c.exe+51DCB4],00000001
//Alt: db C7 86 B4 DC F8 00 01 00 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+3D8E2:
mov [edi+subrosadedicated_34c.exe+51DCB4],00000001
//Alt: db C7 87 B4 DC F8 00 01 00 00 00
dealloc(newmem5)
"subrosadedicated_34c.exe"+645B0:
test ebp,ebp
jne subrosadedicated_34c.exe+645C0
fld dword ptr [subrosadedicated_34c.exe+8A884]
//Alt: db 85 ED 75 0C D9 05 84 A8 AF 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+64587:
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
//Alt: db D9 86 14 AB F8 00
dealloc(newmem)
"subrosadedicated_34c.exe"+64564:
cmp ecx,eax
jne subrosadedicated_34c.exe+645CC
fld dword ptr [subrosadedicated_34c.exe+8A7F8]
//Alt: db 3B C8 75 64 D9 05 F8 A7 AF 00


subrosadedicated_34c.exe+64585:
jp subrosadedicated_34c.exe+645AE

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"grappling hook!"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//which gun has knockback:
  //define(grappling_gun,2) //9mm, mp5, uzi
  define(grappling_gun,3) //magnum
  //define(grappling_gun,1) //m16
  //define(grappling_gun,0) //ak
  //define(grappling_gun,-1) //all




//--------------------------------------



//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(ps,3818)
define(players_max,#96)

//bullet
define(bt0,subrosadedicated_34c.exe+1EE740)
define(b_type,0)
define(b_timer,4)
define(b_owner,8)
//define(b_pos,14)
define(b_pos,20)
define(b_vel,2C)
define(bs,5C)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_pos,74)
define(h_hand1,30E0)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_h,18)
define(i_pb,48)
define(i_pos,4C)
define(is,1F8)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

[ENABLE]






//------------------- bullet hit -----------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

//cmp [b0+b_type+ebp],3
//jne originalcode

//cmp [b0+b_timer+ebp],#475
//jl originalcode

pushad

mov edi,grappling_gun
cmp edi,-1
je shot_check_skip
     cmp [bt0+b_type+ebp],edi
     jne hit_ret
label(shot_check_skip)
shot_check_skip:


mov eax,[bt0+b_owner+ebp]
imul eax,ps
mov eax,[p0+p_h+eax]
cmp eax,-1
je hit_ret
imul eax,hs
//cmp [h0+h_hand1+eax],0
//  je hit_ret
mov eax,[h0+h_hand1+4+eax]
imul eax,is

cmp [i0+eax],0
je hit_ret

mov edx,[i0+i_pb+eax]
imul edx,pbs

mov ebx,[bt0+b_pos+0+ebp]
mov [pb0+pb_pos+edx+0],ebx
mov ebx,[bt0+b_pos+4+ebp]
mov [pb0+pb_pos+edx+4],ebx
mov ebx,[bt0+b_pos+8+ebp]
mov [pb0+pb_pos+edx+8],ebx

label(hit_ret)
hit_ret:
popad

originalcode:
mov [ebp+subrosadedicated_34c.exe+1EE744],00000000

exit:
jmp returnhere

"subrosadedicated_34c.exe"+60227:
jmp newmem
nop
nop
nop
nop
nop
returnhere:





//-------------- freezing check ---------------

{
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:

mov [eax+subrosadedicated_34c.exe+91828],00000001

pushad

mov edx,esi
add edx,80
sub edx,i0

mov ecx,[i0+i_h+edx]
cmp ecx,-1
je freeze_ret
imul ebx,ecx,hs

  fld [h0+h_pos+0+ebx]
  fsub [i0+i_pos+0+edx]
  fabs

  fld [h0+h_pos+4+ebx]
  fsub [i0+i_pos+4+edx]
  fabs
  faddp

  fld [h0+h_pos+8+ebx]
  fsub [i0+i_pos+8+edx]
  fabs
  faddp

  push eax
  push (float)3.0
  fld [esp]
  fcomip st(1)
  fstp st(0)
  pop eax
  pop eax
  ja freeze_ret

  mov [i0+4+edx],0
  mov [i0+8+edx],1

label(freeze_ret)
freeze_ret:
popad
originalcode2:
//mov [eax+subrosadedicated_34c.exe+91828],00000001

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+764FF:
jmp newmem2
nop
nop
nop
nop
nop
returnhere2:

}



alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:
mov [eax+subrosadedicated_34c.exe+8EEF9A8],ebx

pushad

mov edx,eax //edx = i*


mov ecx,[i0+i_h+edx] //ecx = h
cmp ecx,-1
je freeze_ret
imul ebx,ecx,hs //ebx = h*

  fld [h0+h_pos+0+ebx]
  fsub [i0+i_pos+0+edx]
  fabs

  fld [h0+h_pos+4+ebx]
  fsub [i0+i_pos+4+edx]
  fabs
  faddp

  fld [h0+h_pos+8+ebx]
  fsub [i0+i_pos+8+edx]
  fabs
  faddp

  push eax
  push (float)3.0
  fld [esp]
  fcomip st(1)
  fstp st(0)
  pop eax
  pop eax
  ja freeze_ret

  mov [i0+4+edx],0
  mov [i0+8+edx],1


label(freeze_ret)
freeze_ret:
popad
originalcode5:
//mov [eax+subrosadedicated_34c.exe+8EEF9A8],ebx

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+659B8:
jmp newmem5
nop
returnhere5:






[DISABLE]
dealloc(newmem5)
"subrosadedicated_34c.exe"+659B8:
mov [eax+subrosadedicated_34c.exe+8EEF9A8],ebx
//Alt: db 89 98 A8 F9 00 0A
dealloc(newmem2)
"subrosadedicated_34c.exe"+764FF:
mov [eax+subrosadedicated_34c.exe+91828],00000001
//Alt: db C7 80 28 18 34 00 01 00 00 00
dealloc(newmem)
"subrosadedicated_34c.exe"+60227:
mov [ebp+subrosadedicated_34c.exe+1EE744],00000000
//Alt: db C7 85 44 E7 ED 00 00 00 00 00


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>105</ID>
              <Description>"set Magnum as secondary item!"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(mydata,subrosadedicated_34c.exe+80E5000)
define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//item type
define(it0,subrosadedicated_34c.exe+190F8900)
define(it_type,8)
define(it_capacity,1C)
define(it_grip_cnt,74)
define(it_hand0,78)
define(it_hand1,84)
define(its,D4C)



[ENABLE]


alloc(mycode,2048)
mycode:

mov eax,5

mov [arena_secondary],eax

imul ebx,eax,its
mov [it0+it_capacity+ebx],#8

ret
createThread(mycode)

 
[DISABLE]

dealloc(mycode)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>99</ID>
                  <Description>"amount of preloaded bullets"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*5</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"burger jetpacks"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(jetpack_power,0.0225)
define(jetpack_type,1D)


//-------------------------------------------


//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_pb,1A8)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_type,C)
define(i_owner,18)
define(i_body,48)
define(is,1F8)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)


define(mydata,subrosadedicated_34c.exe+80E5000)
define(arena,mydata+40)
define(arena_secondary,arena+28)

[ENABLE]



arena_secondary:
db jetpack_type 00 00 00

//--------------------- 'ammo' decrease -----------------------


alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:

originalcode2:
dec [esi+subrosadedicated_34c.exe+8EEFA90]

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+6D8E6:
jmp newmem2
nop
returnhere2:


//--------------------- lmb hold -----------------------------


alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6:

cmp [i0+i_type+esi],jetpack_type
jne originalcode6

test byte ptr [esi+subrosadedicated_34c.exe+8EEFAA0],01
je originalcode6

       pushad
mov ecx,[i0+i_owner+esi] //h
imul ebx,ecx,hs //h*

//mov ebp,[h0+h_bp0_pb+ebx] //bp
//imul edx,ebp,pbs //bp*
mov edx,[h0+h_bp0_pb+ebx]
imul edx,pbs

    push (float)jetpack_power
       fld [esp]
       fadd [pb0+pb_vel+4+edx]
       fstp [pb0+pb_vel+4+edx]
    add esp,4

       popad
originalcode6:
mov edi,[esi+subrosadedicated_34c.exe+8EEFA9C]

exit6:
jmp returnhere6

"subrosadedicated_34c.exe"+6D857:
jmp newmem6
nop
returnhere6:







 
 
[DISABLE]
dealloc(newmem6)
"subrosadedicated_34c.exe"+6D857:
mov edi,[esi+subrosadedicated_34c.exe+8EEFA9C]
//Alt: db 8B BE 9C FA 19 09
dealloc(newmem2)
"subrosadedicated_34c.exe"+6D8E6:
dec [esi+subrosadedicated_34c.exe+8EEFA90]
//Alt: db FF 8E 90 FA 19 09


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>89</ID>
              <Description>"burger capacity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*1D</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"dash sliding"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(spindash_force,0.4)


//---------------------------------------

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_yaw,8C)
define(h_pitch,90)
define(h_controls,19C)
define(h_controls_last,1A0)
define(h_bp0_pb,1A8)
define(hs,3594)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)


[ENABLE]





alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp [esi+subrosadedicated_34c.exe+51AAD4],2
je originalcode
{
mov ecx,[h0+h_controls_last+esi]
and ecx,8
cmp ecx,0
jne originalcode
}
        pushad
  push (float)spindash_force

mov edx,[h0+h_bp0_pb+esi]
imul edx,pbs

fld [h0+h_yaw+esi]
fsin
fmul [esp]
fadd [pb0+pb_vel+edx]
fstp [pb0+pb_vel+edx]

fld [h0+h_yaw+esi]
fcos
fchs
fmul [esp]
fadd [pb0+pb_vel+8+edx]
fstp [pb0+pb_vel+8+edx]

  add esp,4
        popad
originalcode:
mov [esi+subrosadedicated_34c.exe+51AAD4],00000002

exit:
jmp returnhere

"subrosadedicated_34c.exe"+75DAE:
jmp newmem
nop
nop
nop
nop
nop
returnhere:







subrosadedicated_34c.exe+67782:
db 90 90  90 90 90 90
 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+75DAE:
mov [esi+subrosadedicated_34c.exe+51AAD4],00000002
//Alt: db C7 86 D4 AA 7C 00 02 00 00 00

subrosadedicated_34c.exe+67782:
fmul qword ptr [subrosadedicated_34c.exe+8A968]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"grenade launcher"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]







define(infinite_ammo,1)

//which gun is the grenade launcher:
  //define(grenade_launcher_weapon,2) //9mm, mp5, uzi
  //define(grenade_launcher_weapon,3) //magnum
  //define(grenade_launcher_weapon,1) //m16
  //define(grenade_launcher_weapon,0) //ak
  define(grenade_launcher_weapon,-1) //all

//projectile velocity:     (affected by weapon type!)
  define(grenade_speed,0.02)
  //define(grenade_speed,0.04)

//explosion or despawn timer:
  define(grenade_timer,#120)
//  define(grenade_timer,#30)

//projectile type:
  define(grenade_type,D) //grenade
  //define(grenade_type,22) //football


//-----------------------------------------------------------------


alloc(mydata,2048) //connects player to item

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(ps,3818)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_p,8)
define(h_health0,34)
define(h_bp0_pb,1A8)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_type,C)
define(i_despawn,14)
define(i_timer,E8)
define(i_ammo,F0)
define(i__denial,1EC)
define(i__owner,1E8)

define(i_h,18)
define(i_pb,48)
define(i_pos,4C)
define(is,1F8)

define(players_max,#96)

define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)

               alloc(mycode,2048)
mycode:

mov ecx,players_max
xor ebx,ebx
label(init_loop)
init_loop:
//  mov [mydata+ecx*4],-1
  mov [mydata+ebx],-1
add ebx,4
loop init_loop

ret
createThread(mycode)








alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

mov eax,grenade_launcher_weapon
cmp eax,-1
je weapon_skip
cmp [esp+4],grenade_launcher_weapon
jne originalcode
label(weapon_skip)
weapon_skip:

pushad

mov [i0+i__denial+esi],1

mov eax,infinite_ammo
cmp eax,1
jne shot_not_infinite

  inc [i0+i_ammo+esi]

label(shot_not_infinite)
shot_not_infinite:


mov esi,[esp+20+4+4] //*pos
mov edi,[esp+20+4+8] //*velocity
mov ebp,[esp+20+4+C] //player

mov eax,[mydata+ebp*4]
cmp eax,-1
je shot_table_skip
imul eax,is
   cmp [i0+i_type+eax],grenade_type
   jne shot_table_skip
  cmp [i0+i__owner+eax],ebp
  jne shot_table_skip
cmp [i0+eax],0
jne shot_ret
label(shot_table_skip)
shot_table_skip:

push (float)grenade_speed
sub esp,C
  fld [edi+0]
  fmul [esp+C]
  fstp [esp+0]
    fld [edi+4]
    fmul [esp+C]
    fstp [esp+4]
  fld [edi+8]
  fmul [esp+C]
  fstp [esp+8]
mov ebx,esp //*velocity_new

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edx,esp //*orientation


push edx
//push edi
push ebx
push esi
push grenade_type
call item_spawn_func
add esp,44 //10+24+10

cmp eax,-1
je shot_ret

mov ebx,[esp+4] //esi
imul ebx,is
mov [i0+i__denial+ebx],0

mov ebp,[esp+20+4+C]
mov [mydata+ebp*4],eax

imul eax,is
mov [i0+i__owner+eax],ebp
mov [i0+i_ammo+eax],0
mov [i0+i_timer+eax],grenade_timer

mov ebx,grenade_type
cmp ebx,D
je shot_ret

mov [i0+i_despawn+eax],grenade_timer

label(shot_ret)
shot_ret:
popad

ret


originalcode:
push esi
mov esi,[subrosadedicated_34c.exe+26867F20]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+18920:
jmp newmem
nop
nop
returnhere:




alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
         push eax
  mov eax,grenade_launcher_weapon
  cmp eax,-1
  je skip_weapon2
    cmp [i0+i_type+ebx],eax
    jne originalcode2
  label(skip_weapon2)
  skip_weapon2:

  mov eax,[i0+i_h+ebx]
  imul eax,hs
  mov eax,[h0+h_p+eax]
  mov eax,[mydata+eax*4]
  cmp eax,-1
  je originalcode2
  imul eax,is
  cmp [i0+eax],0
  je originalcode2

    pop eax
  jmp subrosadedicated_34c.exe+43592

originalcode2:
         pop eax
cmp eax,ecx
jl subrosadedicated_34c.exe+4358B
cmp edi,0B

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+4357D:
jmp newmem2
nop
nop
returnhere2:


 
[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+4357D:
cmp eax,ecx
jl subrosadedicated_34c.exe+4358B
cmp edi,0B
//Alt: db 3B C1 7C 0A 83 FF 0B
dealloc(newmem)
"subrosadedicated_34c.exe"+18920:
push esi
mov esi,[subrosadedicated_34c.exe+26867F20]
//Alt: db 56 8B 35 20 7F B1 26



</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>92</ID>
              <Description>"disable grenade damage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

subrosadedicated_34c.exe+20D7E:
db 90 90  90 90 90 90  90 90 90 90
 
[DISABLE]

subrosadedicated_34c.exe+20D7E:
mov [edi-00000180],00000000

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"taser guns"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(kickback_force,subrosadedicated_34c.exe+80E5014)
define(kickback_hp,subrosadedicated_34c.exe+80E5018)

//----------------------------------------------------------------------


//bullet
define(bt0,subrosadedicated_34c.exe+1EE740)
define(b_type,0)
define(b_owner,8)
define(b_vel,2C)
define(bs,5C)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_bp0_p,1AC)
//define(h_bp0_v,1C4)
define(h_bp0_v,2E40)
//define(h_pos,74)
define(hs,3594)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


[ENABLE]








alloc(mycode,2048)
mycode:
  cmp [kickback_force],0
  jne init_ret

    mov [kickback_force],(float)3.0
    mov [kickback_hp],(float)0.2

  label(init_ret)
  init_ret:
ret
createThread(mycode)

//--------- getting shot ------------------------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
//esi - bullet
//edi - character
             pushad

sub esi,2C

  fld [b_vel+0+esi]
  fmul [kickback_force]
  fadd [h0+h_bp0_v+0+edi]
  fstp [h0+h_bp0_v+0+edi]

  fld [b_vel+4+esi]
  fmul [kickback_force]
  fadd [h0+h_bp0_v+4+edi]
  fstp [h0+h_bp0_v+4+edi]

  fld [b_vel+8+esi]
  fmul [kickback_force]
  fadd [h0+h_bp0_v+8+edi]
  fstp [h0+h_bp0_v+8+edi]


          popad

  //hp
    push ebx
         fild [esp]
         fmul [kickback_hp]
         fistp [esp]
    pop ebx


label(shot_ret)
shot_ret:
originalcode2:
mov eax,[edi+subrosadedicated_34c.exe+51AABC]

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+602D3:
jmp newmem2
nop
returnhere2:









[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+602D3:
mov eax,[edi+subrosadedicated_34c.exe+51AABC]
//Alt: db 8B 87 BC AA 20 01


dealloc(mycode)


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>32</ID>
              <Description>"knockback"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+80E5014</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"hp damage"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+80E5018</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"knockback"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//which gun has knockback:
  //define(knockback_gun,2) //9mm, mp5, uzi
  //define(knockback_gun,3) //magnum
  //define(knockback_gun,1) //m16
  //define(knockback_gun,0) //ak
  define(knockback_gun,-1) //all






//----------------------------------------------------------------------

define(kickback_force,subrosadedicated_34c.exe+80E5014)
define(kickback_hp,subrosadedicated_34c.exe+80E5018)



//bullet
define(bt0,subrosadedicated_34c.exe+1EE740)
define(b_type,0)
define(b_owner,8)
define(b_vel,2C)
define(bs,5C)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_health0,34)
define(h_bp0_pb,1A8)
//define(h_bp0_p,1AC)
//define(h_bp0_v,2E40)
//define(h_pos,74)
define(hs,3594)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


[ENABLE]





alloc(mycode,2048)
mycode:
  cmp [kickback_force],0
  jne init_ret

    mov [kickback_force],(float)0.05
    mov [kickback_hp],(float)1.0

  label(init_ret)
  init_ret:
ret
createThread(mycode)

//--------- getting shot ------------------------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
//esi - bullet
//edi - character

mov eax,knockback_gun
cmp eax,-1
je shot_check_skip
cmp [b_type-2C+esi],eax
jne shot_ret
label(shot_check_skip)
shot_check_skip:

             pushad

sub esi,2C

    mov edx,[h0+h_bp0_pb+edi]
    imul edx,pbs

  fld [b_vel+0+esi]
  fmul [kickback_force]
  fadd [pb0+pb_vel+0+edx]
  fstp [pb0+pb_vel+0+edx]

  fld [b_vel+4+esi]
      fabs
  fmul [kickback_force]
  fadd [pb0+pb_vel+4+edx]
  fstp [pb0+pb_vel+4+edx]

  fld [b_vel+8+esi]
  fmul [kickback_force]
  fadd [pb0+pb_vel+8+edx]
  fstp [pb0+pb_vel+8+edx]


          popad

  //hp
    push ebx
         fild [esp]
         fmul [kickback_hp]
         fistp [esp]
    pop ebx


label(shot_ret)
shot_ret:
originalcode2:
mov eax,[edi+subrosadedicated_34c.exe+51AABC]

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+602D3:
jmp newmem2
nop
returnhere2:









[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+602D3:
mov eax,[edi+subrosadedicated_34c.exe+51AABC]
//Alt: db 8B 87 BC AA 20 01


dealloc(mycode)


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>54</ID>
              <Description>"knockback"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+80E5014</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"hp damage"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+80E5018</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"clown attack"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(bot_count,#24)

define(spawn_x,1465.2)
define(spawn_y,49.9)
define(spawn_z,1478.9)
define(spawn_radius,7.0)
define(spawn_radius_bots,24.0)

//-------------------------

define(mydata,subrosadedicated_34c.exe+80E5000)
define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_skin_color,3794)
define(p_skin_hair_color,3798)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)


define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)
               //(player_id)

define(player_create_func,subrosadedicated_34c.exe+31AA0)
                //()

[ENABLE]


//------------ state 1-&gt; 2 ------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
                     pushad
mov ecx,bot_count

label(start_loop)
start_loop:
         push ecx

  call player_create_func

push (float)spawn_z
push (float)spawn_y
push (float)spawn_x
mov esi,esp //position

            pushad
            push (float)spawn_radius_bots
{
call frand5
  fmul [esp]
  fadd [esp+24]
  fstp [esp+24]
call frand5
  fmul [esp]
  fadd [esp+2C]
  fstp [esp+2C]
}
call frand1
fldpi
fmulp st(1)
fadd st(0)
push eax
fst [esp]

fsin
  fmul [esp+4]
  fadd [esp+28]
  fstp [esp+28]
fld [esp]

fcos
  fmul [esp+4]
  fadd [esp+30]
  fstp [esp+30]

fstp st(0)
pop eax
            pop eax
            popad


push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edi,esp  //orientation


  push eax
  push edi
  push esi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop edx
    add esp,30

    //guns --------------------
                 pushad
    push 6
    push 3
    push eax
    call arm_func
    add esp,C
               //(character, weapon, amount of mags)
                 popad
   //--------------------------

    imul ebx,edx,ps
    mov [p0+p_h+ebx],eax
    mov [p0+p_team+ebx],6

    mov [p0+2D00+ebx],1
    mov [p0+3790+ebx],1
    mov [p0+37A8+ebx],1
    mov [p0+37A4+ebx],2

    mov [p0+p_suit_color+ebx],8
    mov [p0+p_skin_hair_color+ebx],5
    mov [p0+p_skin_color+ebx],6

    push edx
    call player_sync_func
    pop edx






     pop ecx
dec ecx
cmp ecx,0
jg start_loop
                     popad
originalcode:
mov ecx,[subrosadedicated_34c.exe+8EC080C]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+86DDB:
jmp newmem
nop
returnhere:









alloc(mycode,4096)
mycode:

  mov [arena_spawn+0],(float)spawn_x
  mov [arena_spawn+4],(float)spawn_y
  mov [arena_spawn+8],(float)spawn_z

  mov [arena_spawn+C],(float)spawn_x
  mov [arena_spawn+10],(float)spawn_y
  mov [arena_spawn+14],(float)spawn_z

  mov [arena_spawn+18],(float)spawn_x
  mov [arena_spawn+1C],(float)spawn_y
  mov [arena_spawn+20],(float)spawn_z

  mov [arena_radius],(float)spawn_radius

ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret

label(frand5)
frand5:
call frand1
push (float)0.5
fsub [esp]
pop eax
ret

[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+86DDB:
mov ecx,[subrosadedicated_34c.exe+8EC080C]
//Alt: db 8B 0D 0C 08 A1 09

dealloc(mycode)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"escape mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(bot_count1,#6)
define(bot_count2,#6)
define(bot_count3,#3)
define(bot_count4,#6)





define(mydata,subrosadedicated_34c.exe+80E5000)
define(cfg_preparation,mydata+8)
define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_skin_color,3794)
define(p_skin_hair_color,3798)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(h_bp0_pb,1A8)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

//body
define(pb0,subrosadedicated_34c.exe+91834)
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)

define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)

define(player_create_func,subrosadedicated_34c.exe+31AA0)
                //()


[ENABLE]




alloc(mycode,4096)
mycode:

  mov [cfg_preparation],#300

    mov [arena_spawn+0+0],(float)1142.8
    mov [arena_spawn+0+4],(float)25.0
    mov [arena_spawn+0+8],(float)1716.5
      mov [arena_spawn+C+0],(float)1142.8
      mov [arena_spawn+C+4],(float)25.0
      mov [arena_spawn+C+8],(float)1716.5
    mov [arena_spawn+18+0],(float)1142.8
    mov [arena_spawn+18+4],(float)25.0
    mov [arena_spawn+18+8],(float)1716.5
  mov [arena_radius],(float)5.5

ret
createThread(mycode)

label(frand5)
frand5:
call frand1
push (float)0.5
fsub [esp]
pop eax
ret

label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret




label(spawn_fuckers_func) //int count, float x,y,z, int weapon
spawn_fuckers_func:

mov ecx,[esp+4]

label(start_loop)
start_loop:
         push ecx

  call player_create_func

push [esp+14]
push [esp+4+10]
push [esp+8+C]
mov esi,esp //position

            pushad
            push (float)1.0 //spawn radius
{
call frand5
  fmul [esp]
  fadd [esp+24]
  fstp [esp+24]
call frand5
  fmul [esp]
  fadd [esp+2C]
  fstp [esp+2C]
}
call frand1
fldpi
fmulp st(1)
fadd st(0)
push eax
fst [esp]

fsin
  fmul [esp+4]
  fadd [esp+28]
  fstp [esp+28]
fld [esp]

fcos
  fmul [esp+4]
  fadd [esp+30]
  fstp [esp+30]

fstp st(0)
pop eax
            pop eax
            popad


push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edi,esp  //orientation


  push eax
  push edi
  push esi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop edx
    add esp,30

    //guns --------------------
                 pushad
    push 6
    push [esp+20+C+10]
    push eax
    call arm_func
    add esp,C
               //(character, weapon, amount of mags)
                 popad
   //--------------------------

    imul ebx,edx,ps
    mov [p0+p_h+ebx],eax
    mov [p0+p_team+ebx],6

    mov [p0+2D00+ebx],1
    mov [p0+3790+ebx],1
    mov [p0+37A8+ebx],1
    mov [p0+37A4+ebx],2
{
    mov [p0+p_suit_color+ebx],8
    mov [p0+p_skin_hair_color+ebx],5
    mov [p0+p_skin_color+ebx],6
}
    mov [p0+p_suit_color+ebx],7
    mov [p0+p_skin_hair_color+ebx],5
    mov [p0+p_skin_color+ebx],6

    push edx
    call player_sync_func
    pop edx






     pop ecx
dec ecx
cmp ecx,0
jg start_loop





ret







//------------ state 1 -&gt; 2 ----------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
             pushad
push 9 //uzi
push (float)1724.3
push (float)25.0
push (float)1135.1
push bot_count1
call spawn_fuckers_func
add esp,14


push 9 //uzi
push (float)1680.3
push (float)25.0
push (float)1116.3
push bot_count2
call spawn_fuckers_func
add esp,14


push 3 //m16
push (float)1692.5
push (float)32.8
push (float)1140.3
push bot_count3
call spawn_fuckers_func
add esp,14


push 1 //ak
push (float)1703.9
push (float)29.0
push (float)1094.3
push bot_count4
call spawn_fuckers_func
add esp,14



          popad

originalcode:
mov ecx,[subrosadedicated_34c.exe+8EC080C]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+86DDB:
jmp newmem
nop
returnhere:




[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+86DDB:
mov ecx,[subrosadedicated_34c.exe+8EC080C]
//Alt: db 8B 0D 0C 08 9D 09


dealloc(mycode)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>118</ID>
              <Description>"^ comes with this, enable it too"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]







define(infinite_ammo,1)

//which gun is the grenade launcher:
  //define(grenade_launcher_weapon,2) //9mm, mp5, uzi
  //define(grenade_launcher_weapon,3) //magnum
  //define(grenade_launcher_weapon,1) //m16
  define(grenade_launcher_weapon,0) //ak
  //define(grenade_launcher_weapon,-1) //all

//projectile velocity:     (affected by weapon type!)
  //define(grenade_speed,0.02)
  define(grenade_speed,0.034)

//explosion or despawn timer:
  define(grenade_timer,#120)
//  define(grenade_timer,#30)

//projectile type:
  define(grenade_type,D) //grenade
  //define(grenade_type,22) //football


//-----------------------------------------------------------------


alloc(mydata,2048) //connects player to item

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(ps,3818)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_p,8)
define(h_health0,34)
define(h_bp0_pb,1A8)
define(hs,3594)

//item
define(i0,subrosadedicated_34c.exe+8EEF9A0)
define(i_type,C)
define(i_despawn,14)
define(i_timer,E8)
define(i_ammo,F0)
define(i__denial,1EC)
define(i__owner,1E8)

define(i_h,18)
define(i_pb,48)
define(i_pos,4C)
define(is,1F8)

define(players_max,#96)

define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)

               alloc(mycode,2048)
mycode:

mov ecx,players_max
xor ebx,ebx
label(init_loop)
init_loop:
//  mov [mydata+ecx*4],-1
  mov [mydata+ebx],-1
add ebx,4
loop init_loop

ret
createThread(mycode)








alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

mov eax,grenade_launcher_weapon
cmp eax,-1
je weapon_skip
cmp [esp+4],grenade_launcher_weapon
jne originalcode
label(weapon_skip)
weapon_skip:

pushad

mov [i0+i__denial+esi],1

mov eax,infinite_ammo
cmp eax,1
jne shot_not_infinite

  inc [i0+i_ammo+esi]

label(shot_not_infinite)
shot_not_infinite:


mov esi,[esp+20+4+4] //*pos
mov edi,[esp+20+4+8] //*velocity
mov ebp,[esp+20+4+C] //player

mov eax,[mydata+ebp*4]
cmp eax,-1
je shot_table_skip
imul eax,is
   cmp [i0+i_type+eax],grenade_type
   jne shot_table_skip
  cmp [i0+i__owner+eax],ebp
  jne shot_table_skip
cmp [i0+eax],0
jne shot_ret
label(shot_table_skip)
shot_table_skip:

push (float)grenade_speed
sub esp,C
  fld [edi+0]
  fmul [esp+C]
  fstp [esp+0]
    fld [edi+4]
    fmul [esp+C]
    fstp [esp+4]
  fld [edi+8]
  fmul [esp+C]
  fstp [esp+8]
mov ebx,esp //*velocity_new

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edx,esp //*orientation


push edx
//push edi
push ebx
push esi
push grenade_type
call item_spawn_func
add esp,44 //10+24+10

cmp eax,-1
je shot_ret

mov ebx,[esp+4] //esi
imul ebx,is
mov [i0+i__denial+ebx],0

mov ebp,[esp+20+4+C]
mov [mydata+ebp*4],eax

imul eax,is
mov [i0+i__owner+eax],ebp
mov [i0+i_ammo+eax],0
mov [i0+i_timer+eax],grenade_timer

mov ebx,grenade_type
cmp ebx,D
je shot_ret

mov [i0+i_despawn+eax],grenade_timer

label(shot_ret)
shot_ret:
popad

ret


originalcode:
push esi
mov esi,[subrosadedicated_34c.exe+26867F20]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+18920:
jmp newmem
nop
nop
returnhere:




alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
         push eax
  mov eax,grenade_launcher_weapon
  cmp eax,-1
  je skip_weapon2
    cmp [i0+i_type+ebx],eax
    jne originalcode2
  label(skip_weapon2)
  skip_weapon2:

  mov eax,[i0+i_h+ebx]
  imul eax,hs
  mov eax,[h0+h_p+eax]
  mov eax,[mydata+eax*4]
  cmp eax,-1
  je originalcode2
  imul eax,is
  cmp [i0+eax],0
  je originalcode2

    pop eax
  jmp subrosadedicated_34c.exe+43592

originalcode2:
         pop eax
cmp eax,ecx
jl subrosadedicated_34c.exe+4358B
cmp edi,0B

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+4357D:
jmp newmem2
nop
nop
returnhere2:


 
[DISABLE]
dealloc(newmem2)
"subrosadedicated_34c.exe"+4357D:
cmp eax,ecx
jl subrosadedicated_34c.exe+4358B
cmp edi,0B
//Alt: db 3B C1 7C 0A 83 FF 0B
dealloc(newmem)
"subrosadedicated_34c.exe"+18920:
push esi
mov esi,[subrosadedicated_34c.exe+26867F20]
//Alt: db 56 8B 35 20 7F B1 26



</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>110</ID>
      <Description>"SRU MOD 3/22 (gotta go very fast) (use this one last)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0)
define(custom_suits_constant,3)

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

//define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer
define(racing_car_type,#8) //minivan

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,2.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,7)
define(spacing_columns_bits,3)
define(spacing_test_offset,0)

define(checkpoint_radius,12.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_horizontal,120)
define(h_vertical,128)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_despawn,1C)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]









//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0

label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
//db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'S' 'h' 'o' 'p' 's' ' ' '-' '&gt;' ' ' 'E' 'l' 'e' 'p' 'h' 'a' 'n' 't' ' ' '-' '&gt;' ' ' 'C' 'u' 'l' ' ' 'd' 'e' ' ' 'S' 'a' 'c'  0
db 'B' 'e' ' ' 't' 'h' 'e' ' ' 'f' 'i' 'r' 's' 't' ' ' 'o' 'n' 'e' ' ' 't' 'o' ' ' 'g' 'e' 't' ' ' 't' 'o' ' ' 't' 'o' 'p' ' ' 'o' 'f' ' ' 'R' 'i' 'o' '!'  0
label(s_msg2)
s_msg2:
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!'  0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'a' 'n' 'd' ' ' 'l' 'a' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':'  ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0

label(s_riotop)
s_riotop:
db 't' 'o' 'p' ' ' 'o' 'f' ' ' 'R' 'i' 'o' '!' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad
{
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
}

push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation


add [players_spawned],spacing_test_offset
push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------
sub [players_spawned],spacing_test_offset

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0

    imul eax,vs
    mov [v0+v_despawn+eax],0

                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jge round_starting_racing_d

  sub ebx,3

label(round_starting_racing_d)
round_starting_racing_d:
cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      fld [cp0+cp_pos+4+edi]
      fsub [h0+h_bp0_p+4+edx]
        fmul st(0)
      faddp st(1)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
jmp update_players_next
    //cmp [p0+p_admin+ebx],1
    //je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

//cmp [cfg_custom_mode],2
//je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

//cmp [game_state],1
//je subrosadedicated_34c.exe+79F61
jmp subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192
{
mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0
}
mov eax,[esp+4] //position
  mov [eax+0],(float)1830.0
  mov [eax+4],(float)47.0
  mov [eax+8],(float)974.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
je originalcode233

mov [esp+4],s_null

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
jne exit255

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:

//---------------------- controls (directional) ------------------------

alloc(newmem382,2048)
label(returnhere382)
label(originalcode382)
label(exit382)

newmem382:
      pushfd
cmp [cfg_custom_mode],2
jne originalcode382
cmp [game_state],1
jne originalcode382

mov [ecx-10],(float)0.0
mov [ecx-18],(float)0.0

originalcode382:
       popfd
fld dword ptr [eax-0C]
fstp dword ptr [ecx-0C]

exit382:
jmp returnhere382

"subrosadedicated_34c.exe"+D152:
jmp newmem382
nop
returnhere382:

//----------------- controls (reset) ----------------


alloc(newmem410,2048)
label(returnhere410)
label(originalcode410)
label(exit410)

newmem410:

cmp [cfg_custom_mode],2
jne originalcode410

cmp [game_state],1
jne originalcode410

or eax,8

originalcode410:
mov [ebx+subrosadedicated_34c.exe+51AC20],eax

exit410:
jmp returnhere410

"subrosadedicated_34c.exe"+D29B:
jmp newmem410
nop
returnhere410:



//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:


        inc [checkpoints_count] //top of rio
         mov [cp0+cp_pos+0+eax],(float)1753.2
         mov [cp0+cp_pos+4+eax],(float)78.5
         mov [cp0+cp_pos+8+eax],(float)990.1
        mov [cp0+cp_color+eax],1
          lea ebx,[s_riotop]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof



//START:

//cmp [racing_spawn_point],0
//jne init_ret



  mov [racing_spawn_point+0],(float)1808.2 //rio
  mov [racing_spawn_point+4],(float)24.8
  mov [racing_spawn_point+8],(float)1034.6


mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem410)
"subrosadedicated_34c.exe"+D29B:
mov [ebx+subrosadedicated_34c.exe+51AC20],eax
//Alt: db 89 83 20 AC 77 00
dealloc(newmem382)
"subrosadedicated_34c.exe"+D152:
fld dword ptr [eax-0C]
fstp dword ptr [ecx-0C]
//Alt: db D9 40 F4 D9 59 F4
dealloc(newmem355)
"subrosadedicated_34c.exe"+A288:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010
//Alt: db C7 85 EC 8E 20 14 10 00 00 00
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>115</ID>
      <Description>"SRU MOD 3/22 (gotta go fast)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0)
define(custom_suits_constant,3)

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

//define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer
define(racing_car_type,#8) //minivan

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,3)
define(spacing_columns_bits,2)
define(spacing_test_offset,0)

define(checkpoint_radius,50.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]








//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0

label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'S' 'h' 'o' 'p' 's' ' ' '-' '&gt;' ' ' 'E' 'l' 'e' 'p' 'h' 'a' 'n' 't' ' ' '-' '&gt;' ' ' 'C' 'u' 'l' ' ' 'd' 'e' ' ' 'S' 'a' 'c'  0
label(s_msg2)
s_msg2:
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!'  0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0

label(s_ahead)
s_ahead:
db 'a' 'h' 'e' 'a' 'd' '!' 0
label(s_kamel)
s_kamel:
db 'K' 'a' 'm' 'e' 'l' 0
label(s_crossroad)
s_crossroad:
db 'M' 'o' 'n' 's' 'o' 't' 'a' ' ' 'c' 'r' 'o' 's' 's' 'r' 'o' 'a' 'd' 0
label(s_basketball)
s_basketball:
db 'B' 'a' 's' 'k' 'e' 't' 'b' 'a' 'l' 'l' ' ' 'c' 'o' 'u' 'r' 't' 0
label(s_culdesac)
s_culdesac:
db 'C' 'u' 'l' ' ' 'd' 'e' ' ' 'S' 'a' 'c' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad
{
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
}

push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation


add [players_spawned],spacing_test_offset
push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------
sub [players_spawned],spacing_test_offset

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    cmp [p0+p_admin+ebx],1
    je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
je originalcode233

mov [esp+4],s_null

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
jne exit255

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:


//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:


        inc [checkpoints_count] //ahead
         mov [cp0+cp_pos+0+eax],(float)1505.4
         mov [cp0+cp_pos+4+eax],(float)24.5
         mov [cp0+cp_pos+8+eax],(float)1075.1
        mov [cp0+cp_color+eax],2
          lea ebx,[s_ahead]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Kamel
         mov [cp0+cp_pos+0+eax],(float)1290.8
         mov [cp0+cp_pos+4+eax],(float)48.5
         mov [cp0+cp_pos+8+eax],(float)1509.1
        mov [cp0+cp_color+eax],1
          lea ebx,[s_kamel]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Monsota crossroad
         mov [cp0+cp_pos+0+eax],(float)1153.3
         mov [cp0+cp_pos+4+eax],(float)36.5
         mov [cp0+cp_pos+8+eax],(float)1618.1
        mov [cp0+cp_color+eax],2
          lea ebx,[s_crossroad]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Basketball
         mov [cp0+cp_pos+0+eax],(float)1459.3
         mov [cp0+cp_pos+4+eax],(float)49.7
         mov [cp0+cp_pos+8+eax],(float)1722.1
        mov [cp0+cp_color+eax],3
          lea ebx,[s_basketball]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Cul de Sac
         mov [cp0+cp_pos+0+eax],(float)1857.2
         mov [cp0+cp_pos+4+eax],(float)40.8
         mov [cp0+cp_pos+8+eax],(float)1528.6
        mov [cp0+cp_color+eax],0
          lea ebx,[s_culdesac]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

//START:

//cmp [racing_spawn_point],0
//jne init_ret



  mov [racing_spawn_point+0],(float)1234.5 //flimpo
  mov [racing_spawn_point+4],(float)24.7
  mov [racing_spawn_point+8],(float)1078.1


mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem355)
"subrosadedicated_34c.exe"+A288:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010
//Alt: db C7 85 EC 8E 20 14 10 00 00 00
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"SRU MOD 3/22 (beamer ride)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0)
define(custom_suits_constant,3)

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

//define(racing_car_type,#0) //town car
define(racing_car_type,#6) //beamer

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,7)
define(spacing_columns_bits,3)
define(spacing_test_offset,0)

define(checkpoint_radius,50.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]








//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0

label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'M' 'a' 'i' 'n' ' ' '-' '&gt;' ' ' 'M' 'u' 's' 'e' 'u' 'm' ' ' '-' '&gt;' ' ' 'H' 'o' 'n' 'd' 'o' ' ' '-' '&gt;' ' ' 'C' 'r' 'a' 'b' ' ' '-' '&gt;' ' ' 'T' 'a' 'x' 'i' ' ' '-' '&gt;' ' ' 'G' 'r' 'e' 'e' 'n' 'e'  0
label(s_msg2)
s_msg2:
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!'  0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0
label(s_museum)
s_museum:
db 'M' 'u' 's' 'e' 'u' 'm' ' ' '(' 'f' 'r' 'o' 'n' 't' ')' 0
label(s_redcube)
s_redcube:
db 'R' 'e' 'd' ' ' 'C' 'u' 'b' 'e' 's' ' ' 'P' 'a' 'r' 'k' ' ' '(' 'H' 'o' 'n' 'd' 'o' ' ' 's' 'i' 'd' 'e' ')' 0
label(s_lumber)
s_lumber:
db 'L' 'u' 'm' 'b' 'e' 'r' ' ' 'M' 'i' 'l' 'l' 0
label(s_crab)
s_crab:
db 'C' 'r' 'a' 'b' ' ' 'L' 'e' 'g' 's' 0
label(s_taxi)
s_taxi:
db 'T' 'a' 'x' 'i' ' ' 'C' 'a' 'b' 's' 0
label(s_greene)
s_greene:
db 'G' 'r' 'e' 'e' 'n' 'e' ' ' 'W' 'a' 'r' 'e' 'h' 'o' 'u' 's' 'e' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad
{
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
}

push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation


add [players_spawned],spacing_test_offset
push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------
sub [players_spawned],spacing_test_offset

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    cmp [p0+p_admin+ebx],1
    je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
je originalcode233

mov [esp+4],s_null

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
jne exit255

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:


//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:


        inc [checkpoints_count] //Museum
         mov [cp0+cp_pos+0+eax],(float)1683.3
         mov [cp0+cp_pos+4+eax],(float)48.6
         mov [cp0+cp_pos+8+eax],(float)1464.9
        mov [cp0+cp_color+eax],2
          lea ebx,[s_museum]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Lumber
         mov [cp0+cp_pos+0+eax],(float)1804.5
         mov [cp0+cp_pos+4+eax],(float)48.5
         mov [cp0+cp_pos+8+eax],(float)1411.5
        mov [cp0+cp_color+eax],1
          lea ebx,[s_lumber]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Red cubes
         mov [cp0+cp_pos+0+eax],(float)1590.9
         mov [cp0+cp_pos+4+eax],(float)36.2
         mov [cp0+cp_pos+8+eax],(float)1269.3
        mov [cp0+cp_color+eax],1
          lea ebx,[s_redcube]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Crab
         mov [cp0+cp_pos+0+eax],(float)1501.9
         mov [cp0+cp_pos+4+eax],(float)31.2
         mov [cp0+cp_pos+8+eax],(float)1212.3
        mov [cp0+cp_color+eax],4
          lea ebx,[s_crab]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

      inc [checkpoints_count] //Taxi
         mov [cp0+cp_pos+0+eax],(float)1953.9
         mov [cp0+cp_pos+4+eax],(float)24.5
         mov [cp0+cp_pos+8+eax],(float)1017.3
        mov [cp0+cp_color+eax],4
          lea ebx,[s_taxi]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Greene
         mov [cp0+cp_pos+0+eax],(float)1899.2
         mov [cp0+cp_pos+4+eax],(float)25.2
         mov [cp0+cp_pos+8+eax],(float)1350.6
        mov [cp0+cp_color+eax],2
          lea ebx,[s_greene]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

//START:

//cmp [racing_spawn_point],0
//jne init_ret



  mov [racing_spawn_point+0],(float)1117.4 //flimpo
  mov [racing_spawn_point+4],(float)48.5
  mov [racing_spawn_point+8],(float)1458.4


mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem355)
"subrosadedicated_34c.exe"+A288:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010
//Alt: db C7 85 EC 8E 20 14 10 00 00 00
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"SRU MOD 3/22 (short hotdog loop)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,1)
define(custom_suits_randomize,0)
define(custom_suits_constant,0)

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,3)
define(spacing_columns_bits,2)
define(spacing_test_offset,5)

define(checkpoint_radius,50.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]








//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0

label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 33 ' ' 'l' 'a' 'p' 's' ' ' 'a' 'r' 'o' 'u' 'n' 'd' ' ' 'H' 'o' 't' 'd' 'o' 'g'  0
label(s_msg2)
s_msg2:
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!'  0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0
label(s_hotdog)
s_hotdog:
db 'H' 'o' 't' 'd' 'o' 'g' 0
label(s_mall)
s_mall:
db 'M' 'a' 'l' 'l' 0
label(s_redcube)
s_redcube:
db 'R' 'e' 'd' ' ' 'C' 'u' 'b' 'e' 's' ' ' 'P' 'a' 'r' 'k' 0
label(s_blue)
s_blue:
db 'B' 'l' 'u' 'e' ' ' 't' 'r' 'a' 'i' 'l' 'e' 'r' ' ' 'a' 'h' 'e' 'a' 'd' '!' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad
{
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
}
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

add [players_spawned],spacing_test_offset
push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------
sub [players_spawned],spacing_test_offset

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    cmp [p0+p_admin+ebx],1
    je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
je originalcode233

mov [esp+4],s_null

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
jne exit255

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:


//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:

   //lap 1
        inc [checkpoints_count] //Hotdog
         mov [cp0+cp_pos+0+eax],(float)1355.2
         mov [cp0+cp_pos+4+eax],(float)24.7
         mov [cp0+cp_pos+8+eax],(float)1155.4
        mov [cp0+cp_color+eax],5
          lea ebx,[s_hotdog]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Mall
         mov [cp0+cp_pos+0+eax],(float)1326.0
         mov [cp0+cp_pos+4+eax],(float)28.8
         mov [cp0+cp_pos+8+eax],(float)1305.6
        mov [cp0+cp_color+eax],3
          lea ebx,[s_mall]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Red cube
         mov [cp0+cp_pos+0+eax],(float)1501.5
         mov [cp0+cp_pos+4+eax],(float)36.7
         mov [cp0+cp_pos+8+eax],(float)1277.2
        mov [cp0+cp_color+eax],1
          lea ebx,[s_redcube]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

   //lap 2
        inc [checkpoints_count] //Hotdog
         mov [cp0+cp_pos+0+eax],(float)1355.2
         mov [cp0+cp_pos+4+eax],(float)0.5
         mov [cp0+cp_pos+8+eax],(float)1155.4
        mov [cp0+cp_color+eax],5
          lea ebx,[s_hotdog]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Mall
         mov [cp0+cp_pos+0+eax],(float)1326.0
         mov [cp0+cp_pos+4+eax],(float)0.5
         mov [cp0+cp_pos+8+eax],(float)1305.6
        mov [cp0+cp_color+eax],3
          lea ebx,[s_mall]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Red cube
         mov [cp0+cp_pos+0+eax],(float)1501.5
         mov [cp0+cp_pos+4+eax],(float)0.5
         mov [cp0+cp_pos+8+eax],(float)1277.2
        mov [cp0+cp_color+eax],1
          lea ebx,[s_redcube]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

   //lap 3
        inc [checkpoints_count] //Hotdog
         mov [cp0+cp_pos+0+eax],(float)1355.2
         mov [cp0+cp_pos+4+eax],(float)1.5
         mov [cp0+cp_pos+8+eax],(float)1155.4
        mov [cp0+cp_color+eax],5
          lea ebx,[s_hotdog]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Mall
         mov [cp0+cp_pos+0+eax],(float)1326.0
         mov [cp0+cp_pos+4+eax],(float)1.5
         mov [cp0+cp_pos+8+eax],(float)1305.6
        mov [cp0+cp_color+eax],3
          lea ebx,[s_mall]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Red cube
         mov [cp0+cp_pos+0+eax],(float)1501.5
         mov [cp0+cp_pos+4+eax],(float)1.5
         mov [cp0+cp_pos+8+eax],(float)1277.2
        mov [cp0+cp_color+eax],1
          lea ebx,[s_redcube]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

   //finish
        inc [checkpoints_count] //blue
         mov [cp0+cp_pos+0+eax],(float)1480.6
         mov [cp0+cp_pos+4+eax],(float)24.5
         mov [cp0+cp_pos+8+eax],(float)1035.7
        mov [cp0+cp_color+eax],2
          lea ebx,[s_blue]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

//START:

//cmp [racing_spawn_point],0
//jne init_ret



  mov [racing_spawn_point+0],(float)1741.7 //flimpo
  mov [racing_spawn_point+4],(float)24.5
  mov [racing_spawn_point+8],(float)1138.8


mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem355)
"subrosadedicated_34c.exe"+A288:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010
//Alt: db C7 85 EC 8E 20 14 10 00 00 00
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>112</ID>
      <Description>"SRU MOD 3/23 (Lenny's track)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0)
define(custom_suits_constant,3)

//------------- racing

define(racing_disable_car_damage,0)
define(racing_cash_prize,#5000)

define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
//define(spacing_columns_bitmask,7)
define(spacing_columns_bitmask,3)
define(spacing_columns_bits,2)
define(checkpoint_radius,50.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]








//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0

label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
//db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 53 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' 'm' 'e' 'n' ' ' '-' '&gt;' ' ' 4F 'X' 53 ' ' '-' '&gt;' ' ' 4D 'o' 'n' 's' 'o' 't' 'a' ' ' '(' 'f' 'i' 'n' 'i' 's' 'h' ')' 0
//db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'S' 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'M' 'o' 'n' 's' ' ' '-' '&gt;' ' ' 'M' 'a' 'l' 'l' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' ' ' '-' '&gt;' ' ' 4F 'X' 'S' ' ' '-' '&gt;' ' ' 'B' 'u' 'r' 'g' 'e' 'r' 0
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'g' 'o' 'l' 'd' ' ' '-' '&gt;' ' ' 'o' 'x' 's' ' ' '-' '&gt;' ' ' 'm' 'o' 'n' 's' ' ' '-' '&gt;' ' ' 'g' 'o' 'l' 'd' ' ' ' ' ' ' '(' 't' 'r' 'a' 'c' 'k' ' ' 'b' 'y' ' ' 'j' 'o' 'h' 'n' ' ' 'w' 'i' 'c' 'k' ')'   0
label(s_msg2)
s_msg2:
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0
label(s_lumber)
s_lumber:
db 'L' 'u' 'm' 'b' 'e' 'r' ' ' 'M' 'i' 'l' 'l' 0
label(s_cityhall)
s_cityhall:
db 'C' 'i' 't' 'y' ' ' 'h' 'a' 'l' 'l' ' ' '(' 'b' 'e' 'h' 'i' 'n' 'd' ' ' 'E' 'l' 'e' 'p' 'h' 'a' 'n' 't' ')' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad
{
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
}
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation


push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    cmp [p0+p_admin+ebx],1
    je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
je originalcode233

mov [esp+4],s_null

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
jne exit255

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:


//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:

        inc [checkpoints_count] //OXS
         mov [cp0+cp_pos+0+eax],(float)1951.6
         mov [cp0+cp_pos+4+eax],(float)28.8
         mov [cp0+cp_pos+8+eax],(float)1700.4
        mov [cp0+cp_color+eax],0
          mov ebx,[corp_names+8]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Lumber
         mov [cp0+cp_pos+0+eax],(float)1693.0
         mov [cp0+cp_pos+4+eax],(float)48.8
         mov [cp0+cp_pos+8+eax],(float)1418.6
        mov [cp0+cp_color+eax],4
          lea ebx,[s_lumber]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //City hall
         mov [cp0+cp_pos+0+eax],(float)1311.6
         mov [cp0+cp_pos+4+eax],(float)25.8
         mov [cp0+cp_pos+8+eax],(float)1778.8
        mov [cp0+cp_color+eax],5
          lea ebx,[s_cityhall]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Monsota
         mov [cp0+cp_pos+0+eax],(float)1060.9
         mov [cp0+cp_pos+4+eax],(float)26.8
         mov [cp0+cp_pos+8+eax],(float)1707.3
        mov [cp0+cp_color+eax],2
          mov ebx,[corp_names+4]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Goldmen
         mov [cp0+cp_pos+0+eax],(float)1066.0
         mov [cp0+cp_pos+4+eax],(float)24.8
         mov [cp0+cp_pos+8+eax],(float)1013.8
        mov [cp0+cp_color+eax],5
          mov ebx,[corp_names+0]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof


//START:

//cmp [racing_spawn_point],0
//jne init_ret

{
  mov [racing_spawn_point+0],(float)1853.0 //Casino
  mov [racing_spawn_point+4],(float)49.0
  mov [racing_spawn_point+8],(float)1455.0
}

{
  mov [racing_spawn_point+0],(float)1072.0 //Mons base
  mov [racing_spawn_point+4],(float)25.0
  mov [racing_spawn_point+8],(float)1705.0
}

  mov [racing_spawn_point+0],(float)1073.9 //Goldmen
  mov [racing_spawn_point+4],(float)24.5
  mov [racing_spawn_point+8],(float)1034.8


mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem355)
"subrosadedicated_34c.exe"+A288:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010
//Alt: db C7 85 EC 8E 20 14 10 00 00 00
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"SRU MOD 4/20 .2 &lt;zombie mode&gt; (not compatible w/ melee!!!)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0) //different pair of colors each round
define(custom_suits_constant,3) //constant offset for suit color value

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,7)
define(spacing_columns_bits,3)
define(checkpoint_radius,50.0)

//------------- zomboid

define(zomboid_initial_survivors_percent,#120)

//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)
  define(p__zombie,34FC)
  define(p__safe,3500)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_p,8)
define(h_car,20)
define(h_seat,24)
define(h_drunkness,6C)
define(h_health0,34)
define(h_health1,3348)
define(h_health2,334C)
define(h_bleeding,3350)
define(h_pos,74)
define(h_bp0_p,1AC)
define(h_bp0_pb,1A8)
define(h_walk_dir,2E40)
define(h_grab0,3230)
define(h_grab1,325C)
define(h_grab_h,4)
define(h_grab_bp,C)
    define(h__zombie,2DCC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


//street
define(street0,subrosadedicated_34c.exe+130202D0)
define(street_p0,3C)
define(street_p1,48)
define(street_s,62C)

//dead drops
define(ddrop0,subrosadedicated_34c.exe+AD16434)
define(ddrop_pos,0)
define(ddrop_name,C)
define(ddrops,4C)


//body
define(pb0,subrosadedicated_34c.exe+91834) //actually wrong, theres weight behind
define(pb_pos,0)
define(pb_vel,C)
define(pbs,AC)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]









//----------------------------------------------------------

alloc(mydata2,8192)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

define(zomboid_phones,mydata2+900)
define(zomboid_escape_name,mydata2+920)
define(zomboid_escape_pos,mydata2+92C)
define(zomboid_table,mydata2+980)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_zomboid)
s_zomboid:
db '/' 'z' 'o' 'm' 'b' 'o' 'i' 'd' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0


label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
//db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 53 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' 'm' 'e' 'n' ' ' '-' '&gt;' ' ' 4F 'X' 53 ' ' '-' '&gt;' ' ' 4D 'o' 'n' 's' 'o' 't' 'a' ' ' '(' 'f' 'i' 'n' 'i' 's' 'h' ')' 0
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'S' 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'M' 'o' 'n' 's' ' ' '-' '&gt;' ' ' 'M' 'a' 'l' 'l' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' ' ' '-' '&gt;' ' ' 4F 'X' 'S' ' ' '-' '&gt;' ' ' 'B' 'u' 'r' 'g' 'e' 'r' 0
label(s_msg2)
s_msg2:
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' 0
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0


label(s_survivors_left)
s_survivors_left:
db '%' 'i' ' ' 's' 'u' 'r' 'v' 'i' 'v' 'o' 'r' 's' ' ' 'l' 'e' 'f' 't' '.' 0
label(s_safezone)
s_safezone:
db 'S' 'a' 'f' 'e' ' ' 'z' 'o' 'n' 'e' ' ' 'f' 'o' 'r' ' ' 't' 'h' 'e' ' ' 's' 'u' 'r' 'v' 'i' 'v' 'o' 'r' 's' ':' ' ' '%' 's' 0
label(s_survived)
s_survived:
db '%' 's' ' ' 's' 'u' 'r' 'v' 'i' 'v' 'e' 'd' '!' 0

//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /zomboid
  push ecx
push 8
push s_zomboid
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7b

     mov [cfg_custom_mode],3
     mov [game_reset],1

jmp custom_ret
label(custom_a7b)
custom_a7b:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------



alloc(newmem635,2048)
label(returnhere635)
label(originalcode635)
label(exit635)

newmem635:


cmp [cfg_custom_mode],3
jne spawn_zomboid_table_check_skip

cmp [zomboid_table+edi*4],1
 jne spawn_zomboid_table_check_skip

  push edi
       imul edi,ps
       mov [p0+p__zombie+edi],1
  pop edi
   jmp subrosadedicated_34c.exe+86852

label(spawn_zomboid_table_check_skip)
spawn_zomboid_table_check_skip:

originalcode635:
cmp dword ptr [esi+14],-01
jne subrosadedicated_34c.exe+86852

exit635:
jmp returnhere635

"subrosadedicated_34c.exe"+866E4:
jmp newmem635
nop
nop
nop
nop
nop
returnhere635:











alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:

{
cmp [cfg_custom_mode],3
jne spawn_zomboid_table_check_skip
     pushad
mov ecx,[esp+28]
cmp [zomboid_table+ecx*4],1
     popad
  //je exit
   je subrosadedicated_34c.exe+86852
  //subrosadedicated_34c.exe+86852 - add esi,00003818
label(spawn_zomboid_table_check_skip)
spawn_zomboid_table_check_skip:
}

cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
           cmp [cfg_custom_mode],3
           jne humanspawn_skip_random_gun
               pushad
                     call msvcrt.rand
                     and eax,3
                     imul eax,2
                     add eax,1
                     mov [esp+20],eax
               popad
           label(humanspawn_skip_random_gun)
           humanspawn_skip_random_gun:
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,4096)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2
jmp originalcode2



//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],0
je originalcode5
cmp [cfg_custom_mode],2
je originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

cmp [cfg_custom_mode],3
je update_zomboid

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    //cmp [p0+p_admin+ebx],1
    //je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end


jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

//----------


label(update_zomboid)
update_zomboid:
               pushad

xor ecx,ecx
xor ebx,ebx
label(update_zomboid_players)
update_zomboid_players:

cmp [p0+ebx],0
je update_zomboid_players_next

//cmp [p0+p_team+ebx],6
//je update_zomboid_players_next

cmp [p0+p_team+ebx],7
je update_zomboid_players_next

cmp [p0+p__safe+ebx],1
je update_zomboid_players_next

cmp [p0+p__zombie+ebx],0
jne update_zomboid_players_zombie

//cmp [p0+p_h+ebx],-1
//je update_zomboid_players_next

//survivor




jmp update_zomboid_players_next
label(update_zomboid_players_zombie)
update_zomboid_players_zombie:

//zombie

mov edx,[p0+p_h+ebx]
cmp edx,-1
jne update_zomboid_players_zombie_skiprespawn

//respawn

        push ebx


push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

push eax
push eax
push eax
mov edi,esp //position

            pushad
   call msvcrt.rand
   and eax,#31
   mov [esp+1C],eax
            popad
   imul eax,street_s
//--- x ------
      pushad
   fld [street0+street_p1+0+eax]
   call frand5
   faddp st(1)
   fstp [esp+20]
      popad
//--- y ------
      pushad
   fld [street0+street_p1+4+eax]
   fstp [esp+24]
      popad
//--- z ------
      pushad
   fld [street0+street_p1+8+eax]
   call frand5
   faddp st(1)
   fstp [esp+28]
      popad
//-------------

  push ecx
  push esi
  push edi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop ecx
    add esp,30
        pop ebx

    mov [p0+p_h+ebx],eax

mov edx,eax
label(update_zomboid_players_zombie_skiprespawn)
update_zomboid_players_zombie_skiprespawn:

imul edx,hs
cmp [h0+h_drunkness+edx],#20
 jge h_update_zomboid_skip_drunkness
mov [h0+h_drunkness+edx],#20
label(h_update_zomboid_skip_drunkness)
h_update_zomboid_skip_drunkness:

mov [h0+h__zombie+edx],1



mov ebp,[h0+h_bp0_pb+edx]
imul ebp,pbs


              push (float)15.0
              fld [esp]
              add esp,4
{
            fld [pb0+pb_pos+0+ebp]
              fsub [zomboid_escape_pos+0]
              fmul st(0)
            fld [pb0+pb_pos+4+ebp]
              fsub [zomboid_escape_pos+4]
              fmul st(0)
            fld [pb0+pb_pos+8+ebp]
              fsub [zomboid_escape_pos+8]
              fmul st(0)
            faddp
            faddp
            fsqrt
}
            fld [pb0+pb_pos+0+ebp]
              fsub [zomboid_escape_pos+0]
              fabs
            fld [pb0+pb_pos+8+ebp]
              fsub [zomboid_escape_pos+8]
              fabs
            faddp
              fcomip st(1)
              fstp st(0)
            ja update_zomboid_skip_safe

                push (float)0.001
            fld [pb0+pb_pos+0+ebp]
              fsub [zomboid_escape_pos+0]
              fmul [esp]
              fstp [pb0+pb_vel+0+ebp]
            fld [pb0+pb_pos+4+ebp]
              fsub [zomboid_escape_pos+4]
              fmul [esp]
              fstp [pb0+pb_vel+4+ebp]
            fld [pb0+pb_pos+8+ebp]
              fsub [zomboid_escape_pos+8]
              fmul [esp]
              fstp [pb0+pb_vel+8+ebp]
                 add esp,4
            dec [h0+h_health2+edx]


            label(update_zomboid_skip_safe)
            update_zomboid_skip_safe:



label(update_zomboid_players_next)
update_zomboid_players_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle update_zomboid_players


label(update_zomboid_ret)
update_zomboid_ret:
               popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,4096)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

cmp [cfg_custom_mode],3
je reset_zomboid

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:
            popad
jmp originalcode28




label(reset_zomboid)
reset_zomboid:
    pushad

xor ecx,ecx
xor ebx,ebx
label(reset_zomboid_players)
reset_zomboid_players:
  mov [p0+p__zombie+ebx],0
  mov [p0+p__safe+ebx],0
   xor eax,eax


      pushad
   call msvcrt.rand
   and eax,#127
   cmp eax,zomboid_initial_survivors_percent
   jl reset_zomboid_table_s
     mov [esp+1C],1
   label(reset_zomboid_table_s)
   reset_zomboid_table_s:
      popad
   mov [zomboid_table+ecx*4],eax

add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_zomboid_players

mov ecx,#256
xor ebx,ebx
label(reset_zomboid_humans)
reset_zomboid_humans:
  mov [h0+h__zombie+ebx],0
add ebx,hs
loop reset_zomboid_humans



    popad


originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
cmp [cfg_custom_mode],3
je death_zomboid

mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [p0+p_team+ecx],6
je originalcode36

cmp [cfg_custom_mode],1
jne originalcode36


             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
jmp death_ret




label(death_zomboid)
death_zomboid:
          pushad
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
 mov ebp,[p0+p_h+ecx]
 imul ebp,hs
 mov [h0+h__zombie+ebp],1
 mov [h0+h_health0+ebp],#100
 mov [h0+h_health1+ebp],#100
 mov [h0+h_health2+ebp],#70
 mov [h0+h_health2+8+ebp],#60
 mov [h0+h_health2+10+ebp],#60
 mov [h0+h_bleeding+ebp],0
   mov [h0+h_drunkness+ebp],#80


 cmp [p0+p__zombie+ecx],1
  je death_ret
 mov [p0+p__zombie+ecx],1

xor ebp,ebp

mov ecx,players_max
xor ebx,ebx
label(death_zomboid_players)
death_zomboid_players:

cmp [p0+ebx],0
je death_zomboid_next

cmp [p0+p_h+ebx],-1
je death_zomboid_next

cmp [p0+p_team+ebx],6
je death_zomboid_next

cmp [p0+p__zombie+ebx],0
jne death_zomboid_next

inc ebp

label(death_zomboid_next)
death_zomboid_next:
add ebx,ps
dec ecx
cmp ecx,0
jge death_zomboid_players

{
cmp ebp,0
jg death_zomboid_end_skip
    mov [game_reset],1
label(death_zomboid_end_skip)
death_zomboid_end_skip:
}

push ebp
push s_survivors_left
push tmpbuffer
call msvcrt.sprintf
add esp,C

push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10

label(death_ret)
death_ret:
             popad

originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],3
jne exit66


//--------- zomboid escape thingies --------------------
pushad

call msvcrt.rand
and eax,7
imul eax,ddrops

mov ebx,[ddrop0+ddrop_pos+0+eax]
mov [zomboid_escape_pos+0],ebx
mov ebx,[ddrop0+ddrop_pos+4+eax]
mov [zomboid_escape_pos+4],ebx
mov ebx,[ddrop0+ddrop_pos+8+eax]
mov [zomboid_escape_pos+8],ebx

lea eax,[ddrop0+ddrop_name+eax]
  mov [zomboid_escape_name],eax
push eax
push s_safezone
push tmpbuffer
call msvcrt.sprintf
add esp,C

push 0
push -1
push tmpbuffer
push 0
call message_func
call message_func
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10


push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation

push [zomboid_escape_pos+8]
push [zomboid_escape_pos+4]
push [zomboid_escape_pos+0]
mov ebp,esp //position

push 3
push esi
push 0
push ebp
push 7 //9

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
add esp,14+30


popad

jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
jne exit233

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
je originalcode255

mov [esp+4],s_null

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:
 cmp [cfg_custom_mode],3
   je getout_zomboid
 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

label(getout_zomboid)
getout_zomboid:

//.......

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:


//--------------------- grabbing --------------------------------




alloc(newmem410,2048)
label(returnhere410)
label(originalcode410)
label(exit410)

newmem410:


//cmp [h0+h__zombie+edi],0
//je originalcode410

//cmp [edi+subrosadedicated_34c.exe+51DCB4],0
//je originalcode410

            pushad
mov ebx,[h0+h_grab0+h_grab_h+edi]
imul ebx,hs
  cmp [h0+h__zombie+ebx],0
  jne grab_skip

        pushad
     call msvcrt.rand
     //and eax,#31
        and eax,#7
     imul eax,8
     mov [esp+1C],eax
        popad
 cmp eax,#56
  jg grab_skip
 cmp [h0+h_health2+eax+ebx],0
  jle grab_skip

   dec [h0+h_health2+eax+ebx] //decrease health (random limb)

       pushad
     call msvcrt.rand
     and eax,#7
     mov [esp+1C],eax
       popad
  cmp eax,0
   jne grab_skip

  mov [h0+h_bleeding+ebx],1 // 1/16th chance bleeding


//--- convulsions
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+0+ebx]
//---
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+4+ebx]
//---
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+8+ebx]
//---

label(grab_skip)
grab_skip:
            popad

originalcode410:
cmp dword ptr [edi+subrosadedicated_34c.exe+51DCB4],00

exit410:
jmp returnhere410

"subrosadedicated_34c.exe"+3D8CD:
jmp newmem410
nop
nop
returnhere410:









alloc(newmem532,2048)
label(returnhere532)
label(originalcode532)
label(exit532)

newmem532:

//cmp [h0+h__zombie+edi],0
//je originalcode410

//cmp [edi+subrosadedicated_34c.exe+51DCB4],0
//je originalcode410

            pushad
mov ebx,[h0+h_grab0+h_grab_h+esi]
imul ebx,hs
  cmp [h0+h__zombie+ebx],0
  jne grab2_skip

        pushad
     call msvcrt.rand
     //and eax,#31
        and eax,#15
     imul eax,8
     mov [esp+1C],eax
        popad
 cmp eax,#56
  jg grab2_skip
 cmp [h0+h_health2+eax+ebx],0
  jle grab2_skip

   dec [h0+h_health2+eax+ebx] //decrease health (random limb)

       pushad
     call msvcrt.rand
     and eax,#7
     mov [esp+1C],eax
       popad
  cmp eax,0
   jne grab2_skip

  mov [h0+h_bleeding+ebx],1 // 1/16th chance bleeding


//--- convulsions
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+0+ebx]
//---
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+4+ebx]
//---
        pushad
     call frand5
        popad
     fstp [h0+h_walk_dir+8+ebx]
//---


label(grab2_skip)
grab2_skip:
            popad
originalcode532:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DCB4],00

exit532:
jmp returnhere532

"subrosadedicated_34c.exe"+3D9DF:
jmp newmem532
nop
nop
returnhere532:


//--------------------- player controls -----------------------

alloc(newmem565,2048)
label(returnhere565)
label(originalcode565)
label(exit565)

newmem565:
   cmp [h0+h__zombie+ebx],0
   je originalcode565

  push ebx
  push edx
mov edx,eax
and edx,3
mov ebx,3
sub ebx,edx
and eax,FFFFFFFC
add eax,ebx
  pop edx
  pop ebx


originalcode565:
mov [ebx+subrosadedicated_34c.exe+51AC20],eax

exit565:
jmp returnhere565

"subrosadedicated_34c.exe"+D29B:
jmp newmem565
nop
returnhere565:



//---------------------- arm extension ---------------------------

{
alloc(newmem439,2048)
label(returnhere439)
label(originalcode439)
label(exit439)

newmem439:

cmp [h0+h__zombie+esi],0
je originalcode439

cmp ecx,eax
je subrosadedicated_34c.exe+645CC
fld dword ptr [subrosadedicated_34c.exe+8A7F8]
jmp exit439

originalcode439:
cmp ecx,eax
jne subrosadedicated_34c.exe+645CC
fld dword ptr [subrosadedicated_34c.exe+8A7F8]

exit439:
jmp returnhere439

"subrosadedicated_34c.exe"+64564:
jmp newmem439
nop
nop
nop
nop
nop
returnhere439:
}



alloc(newmem469,2048)
label(returnhere469)
label(originalcode469)
label(exit469)

newmem469:

cmp [h0+h__zombie+esi],0
je originalcode469

   push (float)0.5
   push (float)1.05
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
fmul [esp+4]
fadd [esp]
   add esp,8

jmp subrosadedicated_34c.exe+64599

originalcode469:
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
//subrosadedicated_34c.exe+6458D - fmul qword ptr [subrosadedicated_34c.exe+8A4A0] // [0.13]
//subrosadedicated_34c.exe+64593 - fadd qword ptr [subrosadedicated_34c.exe+8AB28] // [0.88]


exit469:
jmp returnhere469

"subrosadedicated_34c.exe"+64587:
jmp newmem469
nop
returnhere469:



//------------- item grabbing --------------------------

alloc(newmem599,2048)
label(returnhere599)
label(originalcode599)
label(exit599)

newmem599: //               //(item_id,, character, slot)

cmp [cfg_custom_mode],3
jne originalcode599
   pushad
mov ecx,[esp+24+8]
cmp ecx,-1
  je itemgrab_ret
imul ebx,ecx,hs

cmp [h0+h__zombie+ebx],0
je itemgrab_ret
  popad
ret

label(itemgrab_ret)
itemgrab_ret:
   popad
originalcode599:
push edi
mov edi,[esp+08]

exit599:
jmp returnhere599

"subrosadedicated_34c.exe"+438D0:
jmp newmem599
returnhere599:


//--------------- hp damage --------------------------------------

alloc(newmem673,2048)
label(returnhere673)
label(originalcode673)
label(exit673)

newmem673:
cmp [cfg_custom_mode],3
jne originalcode673

          push eax
mov eax,[esp+60+4]
cmp eax,3
          pop eax
je hp_zomboid_ret

cmp [h0+h_p+edi],-1
je hp_zomboid_ret

          push eax
mov eax,[h0+h_p+edi]
imul eax,ps
cmp [p0+p__zombie+eax],1
          pop eax
jne hp_zomboid_ret


    push (float)0.08
    push ebx
      fild [esp]
      fmul [esp+4]
      fistp [esp]
    pop ebx
    add esp,4
                 mov [h0+h_health1+edi],#70
                 mov [h0+h_health2+edi],#70

label(hp_zomboid_ret)
hp_zomboid_ret:

originalcode673:
test eax,eax
je subrosadedicated_34c.exe+602EC
cmp dword ptr [edi+subrosadedicated_34c.exe+51AAC0],00

exit673:
jmp returnhere673

"subrosadedicated_34c.exe"+602D9:
jmp newmem673
nop
nop
nop
nop
nop
nop
returnhere673:

//------------- conciousness damage -------------------------------

alloc(newmem711,2048)
label(returnhere711)
label(originalcode711)
label(exit711)

newmem711:

originalcode711:
add [edi+subrosadedicated_34c.exe+51DDD0],eax

exit711:
jmp returnhere711

"subrosadedicated_34c.exe"+602F5:
jmp newmem711
nop
returnhere711:

//------------- reset character's player on death -----------

alloc(newmem750,2048)
label(returnhere750)
label(originalcode750)
label(exit750)

newmem750:

cmp [cfg_custom_mode],3
je exit750

originalcode750:
mov [esi+subrosadedicated_34c.exe+51AA8C],ebx

exit750:
jmp returnhere750

"subrosadedicated_34c.exe"+83A5E:
jmp newmem750
nop
returnhere750:


//------------------ get in a car -----------------------------

alloc(newmem790,2048)
label(returnhere790)
label(originalcode790)
label(exit790)

newmem790:
cmp [cfg_custom_mode],3
jne originalcode790

cmp [h0+h__zombie+esi],1
jne getin_zomboid_victory

mov [h0+h_car+esi],-1
jmp originalcode790

label(getin_zomboid_victory)
getin_zomboid_victory:

    pushad
mov ecx,[h0+h_p+esi]
imul ebx,ecx,ps
mov [p0+p__safe+ebx],1
mov [p0+p_h+ebx],-1
mov [h0+h_car+esi],-1

lea eax,[p0+p_name+ebx]
push eax
push s_survived
push tmpbuffer
call msvcrt.sprintf
add esp,C

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10


    popad



originalcode790:
fsub dword ptr [esi+subrosadedicated_34c.exe+51AAF8]

exit790:
jmp returnhere790

"subrosadedicated_34c.exe"+821B6:
jmp newmem790
nop
returnhere790:




//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:

        inc [checkpoints_count] //Monsota
         mov [cp0+cp_pos+0+eax],(float)1060.9
         mov [cp0+cp_pos+4+eax],(float)26.8
         mov [cp0+cp_pos+8+eax],(float)1707.3
        mov [cp0+cp_color+eax],2
          mov ebx,[corp_names+4]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Mall
         mov [cp0+cp_pos+0+eax],(float)1341.0
         mov [cp0+cp_pos+4+eax],(float)48.8
         mov [cp0+cp_pos+8+eax],(float)1338.8
        mov [cp0+cp_color+eax],4
          lea ebx,[subrosadedicated_34c.exe+AD165C0]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Goldmen
         mov [cp0+cp_pos+0+eax],(float)1066.0
         mov [cp0+cp_pos+4+eax],(float)24.8
         mov [cp0+cp_pos+8+eax],(float)1013.8
        mov [cp0+cp_color+eax],5
          mov ebx,[corp_names+0]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //OXS
         mov [cp0+cp_pos+0+eax],(float)1951.6
         mov [cp0+cp_pos+4+eax],(float)28.8
         mov [cp0+cp_pos+8+eax],(float)1700.4
        mov [cp0+cp_color+eax],0
          mov ebx,[corp_names+8]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Isle of Burgers
         mov [cp0+cp_pos+0+eax],(float)1450.9
         mov [cp0+cp_pos+4+eax],(float)48.7
         mov [cp0+cp_pos+8+eax],(float)1479.6
        mov [cp0+cp_color+eax],1
          lea ebx,[subrosadedicated_34c.exe+AD164D8]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof


//START:

//cmp [racing_spawn_point],0
//jne init_ret

  mov [racing_spawn_point+0],(float)1853.0 //Casino
  mov [racing_spawn_point+4],(float)49.0
  mov [racing_spawn_point+8],(float)1455.0

{
  mov [racing_spawn_point+0],(float)1072.0 //Mons base
  mov [racing_spawn_point+4],(float)25.0
  mov [racing_spawn_point+8],(float)1705.0
}

mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret

label(frand5)
frand5:
call frand1
push (float)0.5
fsub [esp]
pop eax
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret


[DISABLE]
dealloc(newmem790)
"subrosadedicated_34c.exe"+821B6:
fsub dword ptr [esi+subrosadedicated_34c.exe+51AAF8]
//Alt: db D8 A6 F8 AA 6F 00
dealloc(newmem750)
"subrosadedicated_34c.exe"+83A5E:
mov [esi+subrosadedicated_34c.exe+51AA8C],ebx
//Alt: db 89 9E 8C AA 6F 00
dealloc(newmem711)
"subrosadedicated_34c.exe"+602F5:
add [edi+subrosadedicated_34c.exe+51DDD0],eax
//Alt: db 01 87 D0 DD 6F 00
dealloc(newmem673)
"subrosadedicated_34c.exe"+602D9:
test eax,eax
je subrosadedicated_34c.exe+602EC
cmp dword ptr [edi+subrosadedicated_34c.exe+51AAC0],00
//Alt: db 85 C0 74 0F 83 BF C0 AA 6F 00 00
dealloc(newmem635)
"subrosadedicated_34c.exe"+866E4:
cmp dword ptr [esi+14],-01
jne subrosadedicated_34c.exe+86852
//Alt: db 83 7E 14 FF 0F 85 64 01 00 00
dealloc(newmem634)
"subrosadedicated_34c.exe"+866A0:
cmp dword ptr [esi-70],00
je subrosadedicated_34c.exe+86852
//Alt: db 83 7E 90 00 0F 84 A8 01 00 00
dealloc(newmem599)
"subrosadedicated_34c.exe"+438D0:
push edi
mov edi,[esp+08]
//Alt: db 57 8B 7C 24 08
dealloc(newmem565)
"subrosadedicated_34c.exe"+D29B:
mov [ebx+subrosadedicated_34c.exe+51AC20],eax
//Alt: db 89 83 20 AC 7F 00
dealloc(newmem532)
"subrosadedicated_34c.exe"+3D9DF:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DCB4],00
//Alt: db 83 BE B4 DC 7F 00 00
dealloc(newmem500)
"subrosadedicated_34c.exe"+3D8B1:
test byte ptr [eax+subrosadedicated_34c.exe+51AC20],01
//Alt: db F6 80 20 AC 7F 00 01

dealloc(newmem469)
"subrosadedicated_34c.exe"+64587:
fld dword ptr [esi+subrosadedicated_34c.exe+51AB14]
//Alt: db D9 86 14 AB 7F 00
dealloc(newmem439)
"subrosadedicated_34c.exe"+64564:
cmp ecx,eax
jne subrosadedicated_34c.exe+645CC
fld dword ptr [subrosadedicated_34c.exe+8A7F8]
//Alt: db 3B C8 75 64 D9 05 F8 A7 36 00
dealloc(newmem410)
"subrosadedicated_34c.exe"+3D8CD:
cmp dword ptr [edi+subrosadedicated_34c.exe+51DCB4],00
//Alt: db 83 BF B4 DC 7F 00 00
dealloc(newmem382)
"subrosadedicated_34c.exe"+654C5:
mov [edx+edi+subrosadedicated_34c.exe+51DCB4],00000000
//Alt: db C7 84 3A B4 DC 7F 00 00 00 00 00
dealloc(newmem329)
"subrosadedicated_34c.exe"+82FAC:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF
//Alt: db C7 86 A4 AA 7E 00 FF FF FF FF
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"SRU MOD 3/23"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(custom_suits_disable,0)
define(custom_suits_randomize,0) //different pair of colors each round
define(custom_suits_constant,3) //constant offset for suit color value

//------------- racing

define(racing_disable_car_damage,1)
define(racing_cash_prize,#5000)

define(racing_car_type,#0) //town car
//define(racing_car_type,#6) //beamer

//define(racing_time_max,#18000) //5 minutes
define(racing_time_max,#21600) //6 minutes

define(spacing_width,4.5)
define(spacing_depth,7.5)
define(spacing_columns_bitmask,7)
define(spacing_columns_bits,3)
define(checkpoint_radius,50.0)


//=======================================================

define(mydata,subrosadedicated_34c.exe+80E5000)

define(custom_suits_offset,mydata-10)

//define(cfg_traffic_cars,mydata+0)
//define(cfg_allow_shooting,mydata+4)
define(cfg_preparation,mydata+8)
define(cfg_custom_mode,mydata+C)
//define(cfg_locktime,mydata+10)

define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)

//vehicle
define(v0,subrosadedicated_34c.exe+80E5180)
define(v_driver,14)
define(vs,50E0)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(corp_names,subrosadedicated_34c.exe+8D460)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)



[ENABLE]






//----------------------------------------------------------

alloc(mydata2,4096)
define(cfg_disable_shooting,mydata2+10)
define(checkpoints_count,mydata2+20)
define(cp0,mydata2+200)
define(cp_pos,8)
define(cp_color,4)
define(cp_name_p,0)
define(cp__sizeof,20)
define(player_checkpoints,mydata2+400)
define(checkpoint_leading,mydata2+1C)
define(players_finished,mydata2+18)
define(players_spawned,mydata2+14)
define(best_time,mydata2+840)
define(best_name,mydata2+850)
define(racing_spawn_point,mydata2+800)
define(racing_finished_at,mydata2+7FC)

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)

alloc(strings,4096)
strings:
label(s_left)
s_left:
db '%' 's' ':' ' ' '%' 'i' ' ' '/' '%' ' ' 'i' 0
label(s_corp)
s_corp:
db 'G' 'L' 'D' 0 'M' 'N' 'S' 0 'O' 'X' 'S' 0 'N' 'E' 'X' 0 'P' 'T' 'C' 0 '_' '_' '_' 0 'B' 'O' 'T' 0 'C' 'I' 'V' 0
define(s_corp_len,4)
label(s_delim)
s_delim:
  db ',' 0
label(s_null)
s_null:
  db 0
label(s_round)
s_round:
db '/' 'r' 'o' 'u' 'n' 'd' 0
label(s_flimpo)
s_flimpo:
db '/' 'f' 'l' 'i' 'm' 'p' 'o' 0
label(s_race)
s_race:
db '/' 'r' 'a' 'c' 'e' 0
label(s_rg)
s_rg:
db '/' 'r' 'g' 0
label(s_r)
s_r:
db '/' 'r' 0
label(s_f0)
s_f0:
db '/' 'f' '0' 0
label(s_f1)
s_f1:
db '/' 'f' '1' 0
label(s_skip)
s_skip:
db '/' 's' 'k' 'i' 'p' 0


label(s_msg0)
s_msg0:
//db 'R' 'a' 'c' 'i' 'n' 'g' ' ' 'm' 'o' 'd' 'e' '!' ' ' 4D 'a' 'd' 'e' ' ' 'b' 'y' ' ' 'T' 'o' 'n' 'y' ' ' 4D 'o' 'n' 't' 'a' 'n' 'a' ' ' 'a' 't' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 53 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' 0
db 'R' 'a' 'c' 'e' ' ' 'd' 'a' 'y' '!' ' ' 'P' 'a' 'y' ' ' 'a' 't' 't' 'e' 'n' 't' 'i' 'o' 'n' ' ' 't' 'o' ' ' 'w' 'h' 'i' 's' 'p' 'e' 'r' ' ' 'm' 'e' 's' 's' 'a' 'g' 'e' 's' ' ' 'f' 'o' 'r' ' ' 'd' 'i' 'r' 'e' 'c' 't' 'i' 'o' 'n' 's' '.' 0
label(s_msg1)
s_msg1:
//db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 53 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' 'm' 'e' 'n' ' ' '-' '&gt;' ' ' 4F 'X' 53 ' ' '-' '&gt;' ' ' 4D 'o' 'n' 's' 'o' 't' 'a' ' ' '(' 'f' 'i' 'n' 'i' 's' 'h' ')' 0
db 'R' 'a' 'c' 'e' ' ' 't' 'r' 'a' 'c' 'k' ':' ' ' 'S' 't' 'a' 'r' 't' ' ' '-' '&gt;' ' ' 'M' 'o' 'n' 's' ' ' '-' '&gt;' ' ' 'M' 'a' 'l' 'l' ' ' '-' '&gt;' ' ' 'G' 'o' 'l' 'd' ' ' '-' '&gt;' ' ' 4F 'X' 'S' ' ' '-' '&gt;' ' ' 'B' 'u' 'r' 'g' 'e' 'r' 0
label(s_msg2)
s_msg2:
db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' 0
//db 'G' 'o' 'o' 'd' ' ' 'l' 'u' 'c' 'k' '!' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' 'r' 'u' 'n' ' ' 'b' 'y' ' ' 'd' 'i' 's' 'c' 'o' 'r' 'd' '.' 'm' 'e' '/' 'S' 'R' 'u' 'n' 'd' 'e' 'r' 'g' 'r' 'o' 'u' 'n' 'd' ' ' '&amp;' ' ' 'g' 'r' 'e' 'v' 'e' 'l' 'o' '.' 'c' 'o' 'm' 0
label(s_cp)
s_cp:
db '%' 'i' ' ' '/' ' ' '%' 'i' '.' ' ' 'n' 'e' 'x' 't' ' ' 's' 't' 'o' 'p' ':' ' ' '%' 's' 0
label(s_lead)
s_lead:
db '%' 's' ' ' 'i' 'n' ' ' 't' 'h' 'e' ' ' 'l' 'e' 'a' 'd' '.' ' ' '(' '%' 's' ')' 0
label(s_won)
s_won:
db '%' 's' ' ' 'w' 'o' 'n' '!' '!' '!' ' ' 't' 'i' 'm' 'e' ':' ' ' '%' 's' 0
label(s_finish)
s_finish:
db '%' 'i' '.' ' ' '%' 's' '.' ' ' ' ' ' ' '%' 's' 0
label(s_test)
s_test:
db 't' 'e' 's' 't' '.' ' ' '%' 'i' 0
label(s_timetest)
s_timetest:
db '%' 30 32 'i' ':' '%' 30 32 'i'  '.' '%' 'i' 0
label(s_hp)
s_hp:
db '%' 'i' '/' '%' 'i' ' ' 'h' 'p' 0
label(s_first)
s_first:
db 'f' 'i' 'r' 's' 't' ' ' 'c' 'h' 'e' 'c' 'k' 'p' 'o' 'i' 'n' 't' ':' ' ' '%' 's' 0
label(s_best)
s_best:
db 'B' 'e' 's' 't' ' ' 't' 'i' 'm' 'e' ':' ' ' ' ' '%' 's' ' ' ' ' 'b' 'y' ' ' '%' 's' 0







//------------------ cusotm /arm args ----------------------

alloc(newmem92,2048)
label(returnhere92)
label(originalcode92)
label(exit92)

newmem92:
     pushad
mov esi,ebx

cmp byte ptr [esi+4],0
je arm_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

//...

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call msvcrt.atoi
mov [esp+20+4+8],eax
pop eax

//-------------- third argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je arm_skip

push eax
call find_player_func
add esp,4

cmp eax,-1
je arm_skip

imul eax,ps
mov ebx,[p0+p_h+eax]
mov [esp+20+0],ebx

label(arm_skip)
arm_skip:
     popad
originalcode92:
call subrosadedicated_34c.exe+4A930

exit92:
jmp returnhere92

"subrosadedicated_34c.exe"+6233D:
jmp newmem92
returnhere92:




//------------------ custom /car args ----------------------

alloc(newmem78,2048)
label(returnhere78)
label(originalcode78)
label(exit78)

newmem78:
           pushad
cmp byte ptr [esi+4],0
je car_skip

//---------------- first argument

push s_delim
lea ebx,[esi+5]
push ebx
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4],eax
pop eax

//--------------- second argument

push s_delim
push 0
call msvcrt.strtok
add esp,8

cmp eax,0
je car_skip

push eax
call msvcrt.atoi
mov [esp+20+4+10],eax
pop eax


//----


label(car_skip)
car_skip:
           popad
originalcode78:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]

exit78:
jmp returnhere78

"subrosadedicated_34c.exe"+61FE7:
jmp newmem78
nop
returnhere78:




//---------------- custom admin commands --------------------

alloc(newmem14,2048)
label(returnhere14)
label(originalcode14)
label(exit14)

newmem14:
                 pushad
mov ecx,[esp+24] //p
imul ebx,ecx,ps //p*
mov esi,[esp+28] //*msg

cmp [p0+p_admin+ebx],1
je custom_admin
//non-admin

jmp custom_ret
label(custom_admin)
custom_admin:
//admin


//--------------  /rg
  push ecx
push 4
push s_rg
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a1

     mov [game_reset],1

jmp custom_ret
label(custom_a1)
custom_a1:

//--------------  /r
  push ecx
push 3
push s_r
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a2

cmp [cfg_custom_mode],2
je custom_ret

     mov eax,[cfg_preparation]
     mov [game_timer],eax

jmp custom_ret
label(custom_a2)
custom_a2:

//--------------  /f0
  push ecx
push 4
push s_f0
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a3

     mov [cfg_disable_shooting],1

jmp custom_ret
label(custom_a3)
custom_a3:

//--------------  /f1
  push ecx
push 4
push s_f1
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a4

     mov [cfg_disable_shooting],0

jmp custom_ret
label(custom_a4)
custom_a4:

//--------------  /round
  push ecx
push 6
push s_round
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a5

     mov [cfg_custom_mode],0
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a5)
custom_a5:

//--------------  /flimpo
  push ecx
push 7
push s_flimpo
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a6

     mov [cfg_custom_mode],1
     mov [game_reset],1

     pushad
   call reset_suits_func
     popad

jmp custom_ret
label(custom_a6)
custom_a6:

//--------------  /race
  push ecx
push 5
push s_race
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a7

     mov [cfg_custom_mode],2
     mov [game_reset],1

jmp custom_ret
label(custom_a7)
custom_a7:

//--------------  /skip
  push ecx
push 5
push s_skip
push esi
call msvcrt.strncmp
pop esi
add esp,8
  pop ecx
test eax,eax
jne custom_a8

     mov [game_timer],#10

jmp custom_ret
label(custom_a8)
custom_a8:



label(custom_ret)
custom_ret:
                 popad
originalcode14:
sub esp,00000148

exit14:
jmp returnhere14

"subrosadedicated_34c.exe"+61970:
jmp newmem14
nop
returnhere14:




//------------ round mode player spawn ----------------------

alloc(newmem,8192)
label(returnhere)
label(originalcode)
label(exit)

newmem:



cmp [cfg_custom_mode],0
je originalcode

         pushad
mov ebp,[esp+20] //pos
mov ecx,[esp+28] //p
imul ebx,ecx,ps  //p*

mov edx,[p0+p_team+ebx]
imul edx,C

  push ecx
  push ebx
        push (float)0.5
        push ebp
        push edx
      // y:
        mov eax,[arena_spawn+edx+4]
        mov [ebp+4],eax
      // x:
          call frand1
          fsub [esp+8]
        mov edx,[esp]
        mov ebp,[esp+4]
          fmul [arena_radius]
          fadd [arena_spawn+edx+0]
          fstp [ebp+0]
      // z:
          call frand1
          fsub [esp+8]
        pop edx
        pop ebp
          fmul [arena_radius]
          fadd [arena_spawn+edx+8]
          fstp [ebp+8]
              add esp,4
  pop ebx
  pop ecx

       popad


call human_spawn_func

cmp [cfg_custom_mode],2
je playerspawn_racing


//bandage
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push E
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad

cmp [arena_secondary],-1
je playerspawn_gun
//secondary item
  //spawn
          pushad
push (float)0.0
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation
   push (float)0.0
   push (float)50.0
   push (float)0.0
   mov ebp,esp //position
push esi
push 0
push ebp
push [arena_secondary]
call item_spawn_func
add esp,10+30
 //grab
    mov ebx,[esp+1C]
       push 6
cmp [arena_secondary],5
jne secondary_weapon
     mov [esp],2
label(secondary_weapon)
secondary_weapon:
       push ebx
       push -1
       push eax
       call item_grab_func
       add esp,10
          popad



label(playerspawn_gun)
playerspawn_gun:
//gun
  cmp [arena_gun],-1
  je exit
          pushad
      push [arena_mags]
      push [arena_gun]
      push eax
      call arm_func
               //(character, weapon, amount of mags)
      add esp,C
          popad


jmp exit





label(playerspawn_racing)
playerspawn_racing:




//---------------------------  racing vehicle -----
                      pushad

push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov esi,esp  //orientation

push [racing_spawn_point+8]
push [racing_spawn_point+4]
push [racing_spawn_point+0]
mov edi,esp //position
//---------------
push (float)spacing_width
push (float)spacing_depth
  mov edx,[players_spawned]
  and edx,spacing_columns_bitmask
push edx
  mov edx,[players_spawned]
  shr edx,spacing_columns_bits
push edx
           fild [esp+4]
             fmul [esp+C]
             fchs
             fadd [racing_spawn_point+8]
             fstp [edi+8]
           fild [esp+0]
             fmul [esp+8]
             fadd [racing_spawn_point+0]
             fstp [edi+0]
add esp,10
//---------------

            pushad
        call msvcrt.rand
        and eax,7
        mov [esp+18],eax
            popad
push ecx
push esi
push 0
push edi
push racing_car_type
call vehicle_spawn_func
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)
add esp,14+30

  mov ecx,[esp+1C] //h
  imul ebx,ecx,hs //h*

    mov [h0+h_car+ebx],eax
    mov [h0+h_seat+ebx],0


                      popad

inc [players_spawned]


jmp exit


originalcode:
call subrosadedicated_34c.exe+75610
               //(float* position, float* rotation, int player_id)
exit:
jmp returnhere

"subrosadedicated_34c.exe"+86821:
jmp newmem
returnhere:


//-------------------- state 1 tick ---------

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:


cmp [cfg_custom_mode],2
je round_starting_racing

cmp [cfg_custom_mode],0
je originalcode2

        cmp ebx,#3600
        jg exit2




//--------------------------- racing ---------------------
label(round_starting_racing)
round_starting_racing:

cmp [game_timer],#3600
jne originalcode2


mov [checkpoint_leading],0
mov [players_finished],0


                         pushad
//--- checkpoint markers ---

mov ecx,[checkpoints_count]
xor ebx,ebx
label(start_cp)
start_cp:
                 push ecx
                 push ebx
{
push (float)0.5
push (float)0.0
push (float)-1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)1.0
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation
}
push (float)0.5
push (float)0.0
push (float)-0.5
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)0.5
push (float)0.0
push (float)-0.5
mov esi,esp  //orientation


push (float)0.0
push (float)0.0
push (float)0.0
mov edi,esp

push [cp0+cp_pos+8+ebx]
push [cp0+cp_pos+4+ebx]
push [cp0+cp_pos+0+ebx]
mov ebp,esp //position

push [cp0+cp_color+ebx]
push esi
push edi
push ebp
push #10

call vehicle_spawn_func
               //(type, *float[3] position, *float[3]? velocity, *float[9] orientation, color)
       {
       mov ebx,[esp+50]
       cmp ebx,0
       jg trailer_bug_fix
          mov ebp,[esp+8]
          mov [ebp+4],(float)28.0
          call vehicle_spawn_func
       label(trailer_bug_fix)
       trailer_bug_fix:
       }

add esp,14+3C

//======================================
{
                     pushad
          push eax
          push s_test
          push tmpbuffer
          call msvcrt.sprintf
          add esp,C
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
                     popad
}
//=======================================

                 pop ebx
                 pop ecx

add ebx,cp__sizeof
//loop start_cp
  dec ecx
  cmp ecx,0
  jg start_cp


//--- players ----

xor ecx,ecx
xor ebx,ebx
label(start_players)
start_players:

   mov [player_checkpoints+ecx*4],0

 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl start_players

//---- msg --------


push 0
push -1
push s_msg0
push 0
call message_func
               //(int type, char* message, int channel, int variation)
  mov [esp+4],s_msg1
    call message_func
  mov [esp+4],s_msg2
    call message_func

 //-- best time --
     mov eax,[best_time]
     cmp eax,racing_time_max
     je init_best_time_msg_skip

                push best_name
     push [best_time]
     call timer_to_string_func
     add esp,4
                push tmpbuffer2
                push s_best
                push tmpbuffer
                call msvcrt.sprintf
                add esp,10
  mov [esp+4],tmpbuffer
  call message_func
       label(init_best_time_msg_skip)
       init_best_time_msg_skip:
add esp,10




              popad
//-------------------------------------------------------




originalcode2:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit2:
jmp returnhere2

"subrosadedicated_34c.exe"+86940:
jmp newmem2
nop
returnhere2:

//------------------ timer on ready up ------------------------

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5:

cmp [cfg_custom_mode],1
jne originalcode5

mov eax,[cfg_preparation]
mov [subrosadedicated_34c.exe+8EC0804],eax
jmp exit5

originalcode5:
mov [subrosadedicated_34c.exe+8EC0804],00000E10

exit5:
jmp returnhere5

"subrosadedicated_34c.exe"+86972:
jmp newmem5
nop
nop
nop
nop
nop
returnhere5:







//------------------- state 2 timer ------------------------------

alloc(newmem9,8192)
label(returnhere9)
label(originalcode9)
label(exit9)

newmem9:

cmp [cfg_custom_mode],0
je originalcode9

inc [game_timer]

cmp [cfg_custom_mode],2
je update_racing

jmp exit9


//------------------------------- update racing -----------------------
label(update_racing)
update_racing:
                      pushad
cmp [game_timer],racing_time_max
  jge update_racing_end
cmp [players_finished],0
  je update_racing_start
mov eax,[racing_finished_at]
add eax,#2000
cmp [game_timer],eax
  jge update_racing_end

label(update_racing_start)
update_racing_start:


push 0 //player count





xor ecx,ecx //p
xor ebx,ebx //p*
label(update_players)
update_players:
  cmp [p0+ebx],0
    je update_players_next
  cmp [p0+p_team+ebx],6
    je update_players_next
  mov ebp,[p0+p_h+ebx] //h
  cmp ebp,-1
    je update_players_next
  imul edx,ebp,hs //h*

      cmp [h0+h_seat+edx],0
      jne update_players_next

      mov esi,[player_checkpoints+ecx*4] //cp
        cmp esi,[checkpoints_count]
          jge update_players_next
      imul edi,esi,cp__sizeof //cp*

             inc [esp]

    cmp [game_timer],6
    jne bound_check

//------- first checkpoint message ---------
                pushad
push [cp0+cp_name_p]
push s_first
push tmpbuffer
call msvcrt.sprintf
add esp,C
                popad
                pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
add esp,10
                popad


//================= next checkpoint check ========
  label(bound_check)
  bound_check:

   push (float)checkpoint_radius
      //if( distance(checkpoint.xz, player.xz) &lt; checkpoint_radius )
      fld [cp0+cp_pos+0+edi]
      fsub [h0+h_bp0_p+0+edx]
        fmul st(0)
      fld [cp0+cp_pos+8+edi]
      fsub [h0+h_bp0_p+8+edx]
        fmul st(0)
      faddp st(1)
      fsqrt
      fld [esp]
        fcomip st(1)
        fstp st(0)
        jb bounds_skip

          //mov [h0+h_health0+edx],0
          inc esi
          add edi,cp__sizeof
          mov [player_checkpoints+ecx*4],esi
        cmp esi,[checkpoints_count]
          jge update_finish

//======== personal checkpoint message ==============================
                   pushad
            push [cp0+cp_name_p+edi]
            push [checkpoints_count]
            push esi
            push s_cp
            push tmpbuffer
          call msvcrt.sprintf
            add esp,14
                   popad
         pushad
push 0
push ebp
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
         popad
//========= lead message ============================================
   cmp esi,[checkpoint_leading]
   jle bounds_skip
   mov [checkpoint_leading],esi
                   pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
            push tmpbuffer2
//-----------------------------------
            lea eax,[p0+p_name+ebx]
            push eax
            push s_lead
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                   popad
       pushad
push 0
push -1
push tmpbuffer
push 0
call message_func
add esp,10
       popad
//===================================================================

      jmp bounds_skip
        label(update_finish)
        update_finish:

           inc [checkpoint_leading] //?
        inc [players_finished]
        cmp [players_finished],1
          je update_finish_victory



                        pushad
//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push [players_finished]
                  push s_finish
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10+4
                        popad

            jmp update_print
              label(update_finish_victory)
              update_finish_victory:

    add [p0+p_cash+ebx],racing_cash_prize

                        pushad

//----------------- time ------------
    pushad
push [game_timer]
call timer_to_string_func
add esp,4
    popad
                push tmpbuffer2
//-----------------------------------
                  lea eax,[p0+p_name+ebx]
                  push eax
                  push s_won
                  push tmpbuffer
                call msvcrt.sprintf
                add esp,10
                        popad

     mov eax,[game_timer]
     mov [racing_finished_at],eax
     cmp eax,[best_time]
     jge update_print

         //----- high score!! ----------
             mov [best_time],eax
                          pushad
                lea eax,[p0+p_name+ebx]
                push eax
                push best_name
                call msvcrt.strcpy
                add esp,8
                          popad
         //-----------------------------

       label(update_print)
       update_print:

       pushad
  push 0
  push -1
  push tmpbuffer
  push 0
  call message_func
  add esp,10
       popad

//------------
        cmp [players_finished],3
          jge bounds_end
        mov eax,[players_spawned]
        cmp [players_finished],eax
          jge bounds_end
//------------


    jmp bounds_skip

         label(bounds_end)
         bounds_end:
              mov [game_state],3
              mov [game_timer],#600

  label(bounds_skip)
  bounds_skip:
  fstp st(0)

   add esp,4
//===================================================

//---- kill if out of a car? ----------
    //cmp [p0+p_admin+ebx],1
    //je update_players_next
    cmp [game_timer],0
    je update_players_next
    //cmp [h0+h_skin+edx],6
    //je update_players_next
    cmp [h0+h_car+edx],-1
    jne update_players_next
      mov [h0+h_health0+edx],0


label(update_players_next)
update_players_next:
 add ebx,ps
  inc ecx
  cmp ecx,players_max
  jl update_players

pop eax //player count
  cmp eax,0
  je update_racing_end







jmp update_racing_ret
   label(update_racing_end)
   update_racing_end:
       mov [game_state],3
       mov [game_timer],#600

label(update_racing_ret)
update_racing_ret:
                      popad
jmp exit9

originalcode9:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit9:
jmp returnhere9

"subrosadedicated_34c.exe"+86E25:
jmp newmem9
nop
returnhere9:







//------------------- round reset -----------------------------------

alloc(newmem28,2048)
label(returnhere28)
label(originalcode28)
label(exit28)

newmem28:

cmp [cfg_custom_mode],0
je originalcode28

            pushad

            //------ racing----
               mov [players_spawned],0
            //-----------------


mov [custom_suits_offset],custom_suits_constant
mov eax,custom_suits_randomize
  cmp eax,0
  je reset_suits_skip
call msvcrt.rand
and eax,3
add eax,2
mov [custom_suits_offset],eax
  label(reset_suits_skip)
  reset_suits_skip:

            popad
originalcode28:
mov [subrosadedicated_34c.exe+8EC0800],esi

exit28:
jmp returnhere28

"subrosadedicated_34c.exe"+7D3DE:
jmp newmem28
nop
returnhere28:

//------------------ player death -------------------------------


alloc(newmem36,2048)
label(returnhere36)
label(originalcode36)
label(exit36)

newmem36:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

cmp [cfg_custom_mode],1
jne originalcode36

cmp [p0+p_team+ecx],6
je originalcode36

             pushad
  mov edx,ecx
  mov ecx,players_max
  xor ebx,ebx
  xor ebp,ebp
  xor esi,esi
  mov eax,[p0+p_team+edx]
label(death_count_loop)
death_count_loop:
  cmp [p0+ebx],0
    je death_count_next
  cmp [p0+p_team+ebx],eax
    jne death_count_next

    inc esi

  cmp [p0+p_h+ebx],-1
    je death_count_next

    inc ebp

label(death_count_next)
death_count_next:
add ebx,ps
loop death_count_loop


push esi
push ebp
lea eax,[s_corp+eax*s_corp_len]
push eax
push s_left
push tmpbuffer
call msvcrt.sprintf
add esp,14

push 0
push -1
push tmpbuffer
push 0
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10

             popad
originalcode36:
//mov [ecx+subrosadedicated_34c.exe+13728E24],ebx

exit36:
jmp returnhere36

"subrosadedicated_34c.exe"+83A50:
jmp newmem36
nop
returnhere36:

//-------------------- no knockout --------------------------------


alloc(newmem45,2048)
label(returnhere45)
label(originalcode45)
label(exit45)

newmem45:

cmp [cfg_custom_mode],0
je originalcode45

cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
  jg exit45

mov [h0+h_health0+esi],0
jmp exit45

originalcode45:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32

exit45:
jmp returnhere45

"subrosadedicated_34c.exe"+80685:
jmp newmem45
nop
nop
returnhere45:


//--------------------- suits --------------------------------------


alloc(newmem21,2048)
label(returnhere21)
label(originalcode21)
label(exit21)

newmem21:

cmp [cfg_custom_mode],0
je originalcode21

  push eax
mov eax,custom_suits_disable
cmp eax,1
  pop eax
je originalcode21

cmp [cfg_custom_mode],2
je suits_race


   push eax
mov eax,[esi-70+p_team]
add eax,[custom_suits_offset]
mov [esi+00003738],eax
   pop eax
jmp exit21

label(suits_race)
suits_race:
   push eax
   pushad
         call msvcrt.rand
         and eax,7
         mov [esp+1C],eax
   popad
mov [esi+00003738],eax
   pop eax
jmp exit21

originalcode21:
mov [esi+00003738],eax

exit21:
jmp returnhere21

"subrosadedicated_34c.exe"+867E7:
jmp newmem21
nop
returnhere21:







alloc(newmem303,2048)
label(returnhere303)
label(originalcode303)
label(exit303)

newmem303:
              push esi
     add esi,[custom_suits_offset]
     mov [p0+p_suit_color+ebx],esi
              pop esi
originalcode303:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C

exit303:
jmp returnhere303

"subrosadedicated_34c.exe"+77638:
jmp newmem303
nop
nop
nop
nop
nop
returnhere303:






//---------------- fire disabling ----------------------------------

alloc(newmem55,2048)
label(returnhere55)
label(originalcode55)
label(exit55)

newmem55:
jne subrosadedicated_34c.exe+43592

cmp [cfg_custom_mode],2
je subrosadedicated_34c.exe+43592

cmp [cfg_disable_shooting],1
je subrosadedicated_34c.exe+43592

originalcode55:
//jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]

exit55:
jmp returnhere55

"subrosadedicated_34c.exe"+43575:
jmp newmem55
nop
nop
nop
returnhere55:

//------------- state 1-&gt;2 timer ----------------------------------

alloc(newmem66,2048)
label(returnhere66)
label(originalcode66)
label(exit66)

newmem66:

cmp [cfg_custom_mode],0
je originalcode66

   mov [game_timer],1
cmp [cfg_custom_mode],2
jne exit66





jmp exit66

originalcode66:
mov [subrosadedicated_34c.exe+8EC0804],ecx

exit66:
jmp returnhere66

"subrosadedicated_34c.exe"+86DEB:
jmp newmem66
nop
returnhere66:

//------------ i dont remember what this is ----------------------

{
alloc(newmem107,2048)
label(returnhere107)
label(originalcode107)
label(exit107)

newmem107:

cmp [cfg_custom_mode],0
jne originalcode07_2

originalcode107:
jg subrosadedicated_34c.exe+867ED
   label(originalcode07_2)
   originalcode07_2:
mov eax,[esi]
jmp 00C18200

exit107:
jmp returnhere107

"subrosadedicated_34c.exe"+867E3:
jmp newmem107
nop
nop
nop
nop
returnhere107:
}


//------------------------- engines ------------------------------



alloc(newmem138,2048)
label(returnhere138)
label(originalcode138)
label(exit138)

newmem138:
jne subrosadedicated_34c.exe+79F61

cmp [cfg_custom_mode],2
jne originalcode138

cmp [game_state],1
je subrosadedicated_34c.exe+79F61

originalcode138:
//jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]

exit138:
jmp returnhere138

"subrosadedicated_34c.exe"+79F4E:
jmp newmem138
nop
returnhere138:

//------------------- vehicle damage ------------------------------



alloc(newmem155,2048)
label(returnhere155)
label(originalcode155)
label(exit155)

newmem155:

cmp [cfg_custom_mode],2
jne originalcode155

cmp [v0+v_driver+esi],-1
je originalcode155

   push eax
mov eax,racing_disable_car_damage
cmp eax,1
   pop eax
je exit155

                pushad
            push #100
            //push [v0+v_health+esi]
            push eax
            push s_hp
            push tmpbuffer
            call msvcrt.sprintf
            add esp,10
                popad

      pushad
push 0
mov ecx,[v0+v_driver+esi]
imul ebx,ecx,ps
mov eax,[p0+p_h+ebx]
push eax
push tmpbuffer
push 1
call message_func
               //(int type, char* message, int channel, int variation)
add esp,10
      popad


originalcode155:
mov [esi+subrosadedicated_34c.exe+80E518C],eax

exit155:
jmp returnhere155

"subrosadedicated_34c.exe"+298AD:
jmp newmem155
nop
returnhere155:

//----------------- fast forward -----------------------------------


alloc(newmem173,2048)
label(returnhere173)
label(originalcode173)
label(exit173)

newmem173:

cmp [cfg_custom_mode],0
jne exit173

originalcode173:
mov [subrosadedicated_34c.exe+8EC0804],ebx

exit173:
jmp returnhere173

"subrosadedicated_34c.exe"+870A3:
jmp newmem173
nop
returnhere173:

//---------------------- limo spawn -----------------------------


alloc(newmem192,2048)
label(returnhere192)
label(originalcode192)
label(exit192)

newmem192:

cmp [cfg_custom_mode],0
je originalcode192

mov eax,[esp+8] //velocity
  mov [eax+0],(float)8.0
  mov [eax+4],(float)35.0
  mov [eax+8],(float)-10.0

originalcode192:
call subrosadedicated_34c.exe+46FE0
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

exit192:
jmp returnhere192

"subrosadedicated_34c.exe"+7CA64:
jmp newmem192
returnhere192:

//----------------- external game mode ---------------------------


alloc(newmem212,2048)
label(returnhere212)
label(originalcode212)
label(exit212)

newmem212:

cmp [cfg_custom_mode],2
jne originalcode212
      mov [game_mode],2

call subrosadedicated_34c.exe+119F0
      mov [game_mode],3
jmp exit212

originalcode212:
call subrosadedicated_34c.exe+119F0


exit212:
jmp returnhere212

"subrosadedicated_34c.exe"+7209D:
jmp newmem212
returnhere212:


//----------------- "%s Manager: %s" ---------------------------

alloc(newmem233,2048)
label(returnhere233)
label(originalcode233)
label(exit233)

newmem233:

cmp [cfg_custom_mode],0
jne exit233

originalcode233:
call subrosadedicated_34c.exe+7070

exit233:
jmp returnhere233

"subrosadedicated_34c.exe"+869DE:
jmp newmem233
returnhere233:

//------------------ "1. Potato $4309432" --------------------------

alloc(newmem255,2048)
label(returnhere255)
label(originalcode255)
label(exit255)

newmem255:

cmp [cfg_custom_mode],0
je originalcode255

mov [esp+4],s_null

originalcode255:
call dword ptr [subrosadedicated_34c.exe+8A09C]

exit255:
jmp returnhere255

"subrosadedicated_34c.exe"+24070:
jmp newmem255
nop
returnhere255:

//------------------- death penalty ------------------------------


alloc(newmem278,2048)
label(returnhere278)
label(originalcode278)
label(exit278)

newmem278:

   cmp [cfg_custom_mode],0
   jne exit278

originalcode278:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi

exit278:
jmp returnhere278

"subrosadedicated_34c.exe"+1AAC0:
jmp newmem278
nop
returnhere278:

//------------------- getting out of a car ----------------------


alloc(newmem329,2048)
label(returnhere329)
label(originalcode329)
label(exit329)

newmem329:

 cmp [cfg_custom_mode],2
   jne originalcode329
 cmp [game_state],1
   jne originalcode329
 jmp exit329

originalcode329:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF

exit329:
jmp returnhere329

"subrosadedicated_34c.exe"+82FAC:
jmp newmem329
nop
nop
nop
nop
nop
returnhere329:

//------------------- base menu - --------------------------------

alloc(newmem355,2048)
label(returnhere355)
label(originalcode355)
label(exit355)

newmem355:

cmp [cfg_custom_mode],0
jne exit355

originalcode355:
mov [ebp+subrosadedicated_34c.exe+13728EEC],00000010

exit355:
jmp returnhere355

"subrosadedicated_34c.exe"+A288:
jmp newmem355
nop
nop
nop
nop
nop
returnhere355:

//------------------ initialize -----------------------------------



alloc(mycode,4096)
mycode:

cmp [arena_spawn+C+0],0
jne init_racing

mov [cfg_preparation],#300
mov [arena_gun],#11
mov [arena_mags],4
mov [arena_secondary],-1
mov [arena_radius],(float)1.5


mov [arena_spawn+0+0],(float)1220.0
mov [arena_spawn+0+4],(float)70.0
mov [arena_spawn+0+8],(float)1780.0

mov [arena_spawn+C+0],(float)1240.0
mov [arena_spawn+C+4],(float)70.0
mov [arena_spawn+C+8],(float)1780.0

mov [arena_spawn+18+0],(float)1204.0
mov [arena_spawn+18+4],(float)70.0
mov [arena_spawn+18+8],(float)1780.0



label(init_racing)
init_racing:

mov [checkpoint_leading],0
mov [players_finished],0
mov [players_spawned],0

     mov [checkpoints_count],0
       xor eax,eax

//CHECKPOINTS:

        inc [checkpoints_count] //Monsota
         mov [cp0+cp_pos+0+eax],(float)1060.9
         mov [cp0+cp_pos+4+eax],(float)26.8
         mov [cp0+cp_pos+8+eax],(float)1707.3
        mov [cp0+cp_color+eax],2
          mov ebx,[corp_names+4]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Mall
         mov [cp0+cp_pos+0+eax],(float)1341.0
         mov [cp0+cp_pos+4+eax],(float)48.8
         mov [cp0+cp_pos+8+eax],(float)1338.8
        mov [cp0+cp_color+eax],4
          lea ebx,[subrosadedicated_34c.exe+AD165C0]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Goldmen
         mov [cp0+cp_pos+0+eax],(float)1066.0
         mov [cp0+cp_pos+4+eax],(float)24.8
         mov [cp0+cp_pos+8+eax],(float)1013.8
        mov [cp0+cp_color+eax],5
          mov ebx,[corp_names+0]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //OXS
         mov [cp0+cp_pos+0+eax],(float)1951.6
         mov [cp0+cp_pos+4+eax],(float)28.8
         mov [cp0+cp_pos+8+eax],(float)1700.4
        mov [cp0+cp_color+eax],0
          mov ebx,[corp_names+8]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof

        inc [checkpoints_count] //Isle of Burgers
         mov [cp0+cp_pos+0+eax],(float)1450.9
         mov [cp0+cp_pos+4+eax],(float)48.7
         mov [cp0+cp_pos+8+eax],(float)1479.6
        mov [cp0+cp_color+eax],1
          lea ebx,[subrosadedicated_34c.exe+AD164D8]
          mov [cp0+cp_name_p+eax],ebx
       add eax,cp__sizeof


//START:

//cmp [racing_spawn_point],0
//jne init_ret

  mov [racing_spawn_point+0],(float)1853.0 //Casino
  mov [racing_spawn_point+4],(float)49.0
  mov [racing_spawn_point+8],(float)1455.0

{
  mov [racing_spawn_point+0],(float)1072.0 //Mons base
  mov [racing_spawn_point+4],(float)25.0
  mov [racing_spawn_point+8],(float)1705.0
}

mov [best_time],racing_time_max
mov byte [best_name+0], 'A'
mov byte [best_name+1], 'l'
mov byte [best_name+2], 'y'
mov byte [best_name+3], 's'
mov byte [best_name+4], 'o'
mov byte [best_name+5], 'n'
mov byte [best_name+6], 0



label(init_ret)
init_ret:
ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret


label(find_player_func) //int find_player(char* name)
find_player_func:
     pushad
  mov ecx,players_max
  xor ebx,ebx
  xor edx,edx
label(find_players_loop)
find_players_loop:
    push ebx
    push ecx
    push edx

  mov edx,[esp+C+20+4]
  push edx
  lea edx,[p0+p_name+ebx]
  push edx
  //call msvcrt.stricmp
  call msvcrt.strstr
  add esp,8
    cmp eax,0
    //jne find_players_next
    je find_players_next
        pop edx
        add esp,8
        //mov eax,edx
        mov [esp+1C],edx
        jmp find_players_ret
  label(find_players_next)
  find_players_next:
    pop edx
    pop ecx
    pop ebx
add ebx,ps
inc edx
//loop find_players_loop
  dec ecx
  cmp ecx,0
  jge find_players_loop
  mov [esp+1C],-1
             label(find_players_ret)
             find_players_ret:
     popad
ret


label(timer_to_string_func)
timer_to_string_func:
        push    ebp
        mov     ebp, esp
        sub     esp, #12
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     [ebp-C], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #3600
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     [ebp-8], eax
        mov     eax, [ebp+8]
        cdq
        mov     ecx, #60
        idiv    ecx
        mov     eax, edx
        cdq
        mov     ecx, #6
        idiv    ecx
        mov     [ebp-4], eax
        mov     edx, [ebp-4]
        push    edx
        mov     eax, [ebp-8]
        push    eax
        mov     ecx, [ebp-C]
        push    ecx
        push    s_timetest
        push    tmpbuffer2
        call    msvcrt.sprintf //_sprintf
        add     esp, #20
        mov     esp, ebp
        pop     ebp
ret


label(reset_suits_func)
reset_suits_func:

xor ecx,ecx
xor ebx,ebx
label(reset_suits_loop)
reset_suits_loop:

    mov eax,[p0+p_team+ebx]
    add eax,[custom_suits_offset]
    mov [p0+p_suit_color+ebx],eax

   push ebx
   push ecx
        call player_sync_func
   pop ebx
   pop ecx


label(reset_suits_next)
reset_suits_next:
add ebx,ps
inc ecx
cmp ecx,players_max
jle reset_suits_loop

ret

 
[DISABLE]
dealloc(newmem329)
"subrosadedicated_34c.exe"+82FAC:
mov [esi+subrosadedicated_34c.exe+51AAA4],FFFFFFFF
//Alt: db C7 86 A4 AA 7E 00 FF FF FF FF
dealloc(newmem303)
"subrosadedicated_34c.exe"+77638:
mov [ebx+subrosadedicated_34c.exe+13728E14],0000003C
//Alt: db C7 83 14 8E 6D 14 3C 00 00 00
dealloc(newmem302)
"subrosadedicated_34c.exe"+867FE:
mov [esi+0000373C],00000009
//Alt: db C7 86 3C 37 00 00 09 00 00 00
dealloc(newmem278)
"subrosadedicated_34c.exe"+1AAC0:
mov [edi+subrosadedicated_34c.exe+13728DE8],esi
//Alt: db 89 B7 E8 8D 29 14
dealloc(newmem255)
"subrosadedicated_34c.exe"+24070:
call dword ptr [subrosadedicated_34c.exe+8A09C]
//Alt: db FF 15 9C A0 BF 00
dealloc(newmem233)
"subrosadedicated_34c.exe"+869DE:
call subrosadedicated_34c.exe+7070
//Alt: db E8 8D 06 F8 FF
dealloc(newmem212)
"subrosadedicated_34c.exe"+7209D:
call subrosadedicated_34c.exe+119F0
//Alt: db E8 4E F9 F9 FF
dealloc(newmem192)
"subrosadedicated_34c.exe"+7CA64:
call subrosadedicated_34c.exe+46FE0
//Alt: db E8 77 A5 FC FF
dealloc(newmem173)
"subrosadedicated_34c.exe"+870A3:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 FE 09
dealloc(newmem155)
"subrosadedicated_34c.exe"+298AD:
mov [esi+subrosadedicated_34c.exe+80E518C],eax
//Alt: db 89 86 8C 51 20 09
dealloc(newmem138)
"subrosadedicated_34c.exe"+79F4E:
jne subrosadedicated_34c.exe+79F61
mov eax,[esp+20]
//Alt: db 75 11 8B 44 24 20
dealloc(newmem122)
"subrosadedicated_34c.exe"+2720C:
je subrosadedicated_34c.exe+27242
mov ebx,[subrosadedicated_34c.exe+18365C20]
//Alt: db 74 34 8B 1D 20 5C 48 19
dealloc(newmem107)
"subrosadedicated_34c.exe"+867E3:
jg subrosadedicated_34c.exe+867ED
mov eax,[esi]
jmp 00C18200
//Alt: db 7F 08 8B 06 E9 14 1A A7 FF
dealloc(newmem92)
"subrosadedicated_34c.exe"+6233D:
call subrosadedicated_34c.exe+4A930
//Alt: db E8 EE 85 FE FF
dealloc(newmem78)
"subrosadedicated_34c.exe"+61FE7:
fsubr dword ptr [eax+subrosadedicated_34c.exe+51AC30]
//Alt: db D8 A8 30 AC 7C 00
dealloc(newmem66)
"subrosadedicated_34c.exe"+86DEB:
mov [subrosadedicated_34c.exe+8EC0804],ecx
//Alt: db 89 0D 04 08 17 09
dealloc(newmem55)
"subrosadedicated_34c.exe"+43575:
jne subrosadedicated_34c.exe+43592
mov eax,[ebx+subrosadedicated_34c.exe+8EEFA98]
//Alt: db 75 1B 8B 83 98 FA 19 09
dealloc(newmem45)
"subrosadedicated_34c.exe"+80685:
cmp dword ptr [esi+subrosadedicated_34c.exe+51DDCC],32
//Alt: db 83 BE CC DD 20 01 32
dealloc(newmem36)
"subrosadedicated_34c.exe"+83A50:
mov [ecx+subrosadedicated_34c.exe+13728E24],ebx
//Alt: db 89 99 24 8E 41 14
dealloc(newmem28)
"subrosadedicated_34c.exe"+7D3DE:
mov [subrosadedicated_34c.exe+8EC0800],esi
//Alt: db 89 35 00 08 BB 09
dealloc(newmem21)
"subrosadedicated_34c.exe"+867E7:
mov [esi+00003738],eax
//Alt: db 89 86 38 37 00 00
dealloc(newmem14)
"subrosadedicated_34c.exe"+61970:
sub esp,00000148
//Alt: db 81 EC 48 01 00 00
dealloc(newmem9)
"subrosadedicated_34c.exe"+86E25:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09
dealloc(newmem5)
"subrosadedicated_34c.exe"+86972:
mov [subrosadedicated_34c.exe+8EC0804],00000E10
//Alt: db C7 05 04 08 BB 09 10 0E 00 00
dealloc(newmem2)
"subrosadedicated_34c.exe"+86940:
mov [subrosadedicated_34c.exe+8EC0804],ebx
//Alt: db 89 1D 04 08 BB 09

dealloc(newmem)
"subrosadedicated_34c.exe"+86821:
call subrosadedicated_34c.exe+75610
//Alt: db E8 EA ED FE FF




dealloc(mycode)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
dealloc(strings)
dealloc(mydata2)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"..gun.. (-1 for no gun)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"..mags.."</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"..secondary item.."</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>". preparation time ."</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>". spawn radius ."</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"gold x"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"gold y"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"gold z"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+48</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"mons x"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+4C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"mons y"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"mons z"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"oxs x"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"oxs y"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+5C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"oxs z"</Description>
          <VariableType>Float</VariableType>
          <Address>subrosadedicated_34c.exe+80E5000+40+60</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"--- structs ---"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"vehicle"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+80E5180+50E0*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"acc count"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+16CE4224</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"player"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+13728DA0+3818*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"human"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+51AA84+3594*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"item"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+8EEF9A0+1F8*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"body"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+91834+AC*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"item type"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+190F8900+D4C*0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"vehicle type"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>subrosadedicated_34c.exe+AD17740+18548*0</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>56</ID>
      <Description>"---- weapon stats -----"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>58</ID>
          <Description>"ak47"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>57</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*1</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"m16"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>64</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*3</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"mp5"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>70</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*7</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*7</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*7</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>74</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*7</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"uzi"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>76</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*a</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*9</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>78</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*9</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>79</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*9</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*9</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"9mm"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>82</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*b</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*b</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*b</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*b</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"magnum"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>104</ID>
              <Description>"mag size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+1C+D4C*6</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>100</ID>
              <Description>"weight"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+4+D4C*5</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>101</ID>
              <Description>"firing delay"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+10+D4C*5</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"bullet speed"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+20+D4C*5</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>103</ID>
              <Description>"bullet variance"</Description>
              <VariableType>Float</VariableType>
              <Address>subrosadedicated_34c.exe+190F8900+24+D4C*5</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>106</ID>
      <Description>"----- misc -----"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"resetgame override"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

subrosadedicated_34c.exe+88009:
db 90  90  90 90 90 90
 
[DISABLE]

subrosadedicated_34c.exe+88009:
mov [subrosadedicated_34c.exe+8EC05E8],ecx

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"custom replay location"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


alloc(strings,2048)
strings:
label(s_name)
s_name:
db 'r' 'o' 'u' 'n' 'd' 0
label(s_path)
s_path:
db 'G' ':' '\' 't' 'm' 'p' 0
label(s_format)
s_format:
db '%' 's' '\' '%' 's' '_' '%' 's' '.' 's' 'r' 'p' 0
label(s_timeformat)
s_timeformat:
//db '%' 'b' '-' '%' 'd' '-' '%' 'y' '-' '%' 'H' '-' '%' 'M' 0
db '%' 'i' '-' '%' 'i' '-' '%' 'i' '_' '%' 'i' '-' '%' 'i' 0

alloc(tmpbuffer,2048)
alloc(tmpbuffer2,2048)


alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
        pushad

push 0
call msvcrt.time
add esp,4

  push edx
  push eax
push esp
call msvcrt.localtime
add esp,C
{
  push eax
push s_timeformat
push #64
push tmpbuffer2
call msvcrt.strftime
add esp,C
  //call msvcrt.free
  add esp,4
}
  push eax
 push [eax+4] //min
 push [eax+8] //hour
  mov ebx,[eax+14]
  sub ebx,#100
  push ebx //year
 push [eax+C] //day
  mov ebx,[eax+10]
  inc ebx
  push ebx //month
push s_timeformat
push tmpbuffer2
call msvcrt.sprintf
 add esp,1C
  //call msvcrt.free
  add esp,4


push tmpbuffer2
push s_name
push s_path
push s_format
push tmpbuffer
call msvcrt.sprintf
add esp,14

mov [esp+18],tmpbuffer
        popad
originalcode:
//lea ecx,[esp+14]
push subrosadedicated_34c.exe+8A2BC

exit:
jmp returnhere

"subrosadedicated_34c.exe"+DD81:
jmp newmem
nop
nop
nop
nop
returnhere:




subrosadedicated_34c.exe+DD1E:
lea eax,[esp+18]

 
[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+DD81:
lea ecx,[esp+14]
push subrosadedicated_34c.exe+8A2BC
//Alt: db 8D 4C 24 14 68 BC A2 8E 00

subrosadedicated_34c.exe+DD1E:
lea eax,[esp+18]



dealloc(strings)
dealloc(tmpbuffer)
dealloc(tmpbuffer2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"clown attack_"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(bot_count,#15)

define(spawn_x,1465.2)
define(spawn_y,49.9)
define(spawn_z,1478.9)
define(spawn_radius,7.0)
define(spawn_radius_bots,18.0)

//-------------------------

define(mydata,subrosadedicated_34c.exe+80E5000)
define(arena,mydata+40)
define(arena_sizeof,40+54)
define(arena_name,arena+0)
define(arena_spawn,arena+40)
define(arena_radius,arena+38)
//define(arena_lives,arena+3C)
define(arena_gun,arena+30)
define(arena_mags,arena+34)
//define(arena_car,arena+2C)
define(arena_secondary,arena+28)

//player
define(p0,subrosadedicated_34c.exe+13728DA0)
define(p_name,4)
define(p_admin,30)
define(p_team,70)
define(p_h,84)
define(p_cash,48)
define(p_stocks,78)
define(p_slot0,18A4)
define(p_slotsize,64)
define(p_skin_color,3794)
define(p_skin_hair_color,3798)
define(p_suit_color,37A8)
define(ps,3818)
define(players_max,#96)
  define(p__zombie,34FC)

//character
define(h0,subrosadedicated_34c.exe+51AA84)
define(h_car,20)
define(h_seat,24)
define(h_health0,34)
define(h_pos,74)
define(h_bp0_p,1AC)
define(hs,3594)
    define(h__zombie,2DCC)

define(game_mode,subrosadedicated_34c.exe+8EC05E8)
define(game_state,subrosadedicated_34c.exe+8EC0800)
define(game_reset,subrosadedicated_34c.exe+8B01C2C)
define(game_timer,subrosadedicated_34c.exe+8EC0804)


define(human_spawn_func,subrosadedicated_34c.exe+75610)
               //(float* position, float* rotation, int player_id)
define(arm_func,subrosadedicated_34c.exe+4A930)
               //(character, weapon, amount of mags)
define(item_spawn_func,subrosadedicated_34c.exe+43140)
               //(int item_type, float *pos, [float* velocity], float *orientation)
define(item_grab_func,subrosadedicated_34c.exe+438D0)
               //(item_id,, character, slot)
define(message_func,subrosadedicated_34c.exe+7070)
               //(int type, char* message, int channel, int variation)

define(vehicle_spawn_func,subrosadedicated_34c.exe+46FE0)
               //(type, *float[3] position, [*float[3] velocity], *float[9] orientation, color)

define(player_sync_func,subrosadedicated_34c.exe+72B0)
               //(player_id)

define(player_create_func,subrosadedicated_34c.exe+31AA0)
                //()

[ENABLE]


//------------ state 1-&gt; 2 ------------------

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
                     pushad
mov ecx,bot_count

label(start_loop)
start_loop:
         push ecx

  call player_create_func

push (float)spawn_z
push (float)spawn_y
push (float)spawn_x
mov esi,esp //position

            pushad
            push (float)spawn_radius_bots
{
call frand5
  fmul [esp]
  fadd [esp+24]
  fstp [esp+24]
call frand5
  fmul [esp]
  fadd [esp+2C]
  fstp [esp+2C]
}
call frand1
fldpi
fmulp st(1)
fadd st(0)
push eax
fst [esp]

fsin
  fmul [esp+4]
  fadd [esp+28]
  fstp [esp+28]
fld [esp]

fcos
  fmul [esp+4]
  fadd [esp+30]
  fstp [esp+30]

fstp st(0)
pop eax
            pop eax
            popad


push (float)0.0
push (float)0.0
push (float)1.0
  push (float)0.0
  push (float)1.0
  push (float)0.0
push (float)-1.0
push (float)0.0
push (float)0.0
mov edi,esp  //orientation


  push eax
  push edi
  push esi
call human_spawn_func
               //(float* position, float* rotation, int player_id)
  add esp,8
  pop edx
    add esp,30

    //guns --------------------
           imul ebx,eax,hs
           mov [h0+h__zombie+ebx],1
    {
                 pushad
    push 6
    push 3
    push eax
    call arm_func
    add esp,C
               //(character, weapon, amount of mags)
                 popad
                 }
   //--------------------------

    imul ebx,edx,ps
    mov [p0+p_h+ebx],eax
    mov [p0+p_team+ebx],6

    mov [p0+2D00+ebx],1
    mov [p0+3790+ebx],1
    mov [p0+37A8+ebx],1
    mov [p0+37A4+ebx],2


    mov [p0+p_suit_color+ebx],5
    mov [p0+p_skin_hair_color+ebx],#10
    mov [p0+p_skin_color+ebx],6
    {
       cmp [esp],#5
       je skinskip111

        pushad
       call msvcrt.rand
       and eax,#7
       mov [esp+1C],eax
        popad
    mov [p0+p_suit_color+ebx],eax
        pushad
       call msvcrt.rand
       and eax,#7
       mov [esp+1C],eax
        popad
    mov [p0+p_skin_hair_color+ebx],eax
        pushad
       call msvcrt.rand
       and eax,#7
       mov [esp+1C],eax
        popad
    mov [p0+p_skin_color+ebx],eax

    label(skinskip111)
    skinskip111:
}
                               mov [p0+p__zombie+ebx],1

    push edx
    call player_sync_func
    pop edx






     pop ecx
dec ecx
cmp ecx,0
jg start_loop
                     popad
originalcode:
mov ecx,[subrosadedicated_34c.exe+8EC080C]

exit:
jmp returnhere

"subrosadedicated_34c.exe"+86DDB:
jmp newmem
nop
returnhere:









alloc(mycode,4096)
mycode:

  mov [arena_spawn+0],(float)spawn_x
  mov [arena_spawn+4],(float)spawn_y
  mov [arena_spawn+8],(float)spawn_z

  mov [arena_spawn+C],(float)spawn_x
  mov [arena_spawn+10],(float)spawn_y
  mov [arena_spawn+14],(float)spawn_z

  mov [arena_spawn+18],(float)spawn_x
  mov [arena_spawn+1C],(float)spawn_y
  mov [arena_spawn+20],(float)spawn_z

  mov [arena_radius],(float)spawn_radius

ret
createThread(mycode)


label(frand1)
frand1:
call msvcrt.rand
push eax
fild dword [esp]
//push randmax
push 7FFF
fidiv dword [esp]
add esp,8
ret

label(frand5)
frand5:
call frand1
push (float)0.5
fsub [esp]
pop eax
ret

[DISABLE]
dealloc(newmem)
"subrosadedicated_34c.exe"+86DDB:
mov ecx,[subrosadedicated_34c.exe+8EC080C]
//Alt: db 8B 0D 0C 08 A1 09

dealloc(mycode)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="player" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="String" Bytesize="13" DisplayMethod="Unsigned Integer"/>
        <Element Offset="17" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" Description="acc" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="4 Bytes" Bytesize="4" RLECount="18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="4 Bytes" Bytesize="4" Description="h" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="156" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="204" Vartype="4 Bytes" Bytesize="4" RLECount="16" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" RLECount="101" DisplayMethod="Unsigned Integer"/>
        <Element Offset="704" Vartype="String" Bytesize="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="711" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="712" Vartype="4 Bytes" Bytesize="4" RLECount="19" DisplayMethod="Unsigned Integer"/>
        <Element Offset="788" Vartype="String" Bytesize="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="799" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="800" Vartype="4 Bytes" Bytesize="4" RLECount="18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="872" Vartype="String" Bytesize="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="883" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="884" Vartype="4 Bytes" Bytesize="4" RLECount="165" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1544" Vartype="String" Bytesize="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1551" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1552" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1556" Vartype="4 Bytes" Bytesize="4" RLECount="18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1628" Vartype="String" Bytesize="14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1642" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1644" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1712" Vartype="String" Bytesize="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1724" Vartype="4 Bytes" Bytesize="4" RLECount="18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1796" Vartype="String" Bytesize="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1806" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1808" Vartype="4 Bytes" Bytesize="4" RLECount="18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1880" Vartype="String" Bytesize="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1891" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1892" Vartype="4 Bytes" Bytesize="4" RLECount="3035" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14032" Vartype="Float" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14080" Vartype="4 Bytes" Bytesize="4" RLECount="70" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="human" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="car" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="4 Bytes" Bytesize="4" Description="health0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" RLECount="15" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="144" Vartype="4 Bytes" Bytesize="4" RLECount="30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Float" Bytesize="4" Description="h" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="Float" Bytesize="4" Description="v" DisplayMethod="Unsigned Integer"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" RLECount="28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="412" Vartype="4 Bytes" Bytesize="4" Description="controls" DisplayMethod="Unsigned Integer"/>
        <Element Offset="416" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="428" Vartype="Float" Bytesize="4" RLECount="58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="660" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="732" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="736" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="740" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="744" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="748" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="752" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="756" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="760" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="764" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="772" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="780" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="792" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="796" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="800" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="804" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="808" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="812" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="824" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="828" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="832" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="836" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="848" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="852" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="856" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="876" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="878" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="880" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="884" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="888" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="892" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="896" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="904" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="912" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="920" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="928" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="936" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="940" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="948" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="952" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="956" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="960" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="964" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="972" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="976" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="980" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="988" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1028" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1032" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1036" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1040" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1044" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1048" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1052" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1056" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1060" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1064" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1072" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1080" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1092" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1096" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1100" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1104" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1108" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1112" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1124" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1128" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1136" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1148" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1152" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1156" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1176" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1178" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1180" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1184" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1188" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1192" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1196" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1204" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1212" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1220" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1228" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1236" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1240" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1248" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1252" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1256" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1260" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1264" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1272" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1276" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1280" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1288" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1328" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1332" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1336" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1340" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1344" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1348" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1352" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1356" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1360" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1364" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1372" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1380" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1392" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1396" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1400" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1404" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1408" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1412" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1424" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1428" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1436" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1448" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1452" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1456" Vartype="Float" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1484" Vartype="Byte" Bytesize="1" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1496" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1504" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1520" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1528" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1536" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1540" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1548" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1552" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1556" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1560" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1564" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1572" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1576" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1580" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1588" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1628" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1636" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1640" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1644" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1648" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1652" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1656" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1660" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1664" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1672" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1680" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1692" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1696" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1700" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1704" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1708" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1712" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1724" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1736" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1748" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1752" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1756" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1776" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1780" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1784" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1788" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1792" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1796" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1800" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1804" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1812" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1820" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1828" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1836" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1848" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1852" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1856" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1860" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1864" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1872" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1876" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1880" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1888" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1928" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1932" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1936" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1940" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1944" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1948" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1952" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1956" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1960" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1964" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1972" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1980" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1996" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2000" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2004" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2008" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2012" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2024" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2036" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2048" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2052" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2056" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2076" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2080" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2084" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2088" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2092" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2096" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2100" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2104" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2112" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2120" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2128" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2136" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2140" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2148" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2152" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2156" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2160" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2164" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2172" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2180" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2188" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2228" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2232" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2236" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2240" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2244" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2248" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2252" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2256" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2260" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2264" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2272" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2280" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2292" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2296" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2300" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2304" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2308" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2312" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2324" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2328" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2336" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2348" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2352" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2356" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2372" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2376" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2380" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2384" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2396" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2400" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2404" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2412" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2420" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2428" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2436" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2440" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2448" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2452" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2456" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2460" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2464" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2472" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2476" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2480" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2488" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2528" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2532" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2536" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2540" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2544" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2548" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2552" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2556" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2560" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2564" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2572" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2580" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2592" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2596" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2600" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2604" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2608" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2612" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2624" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2636" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2648" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2652" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2656" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2676" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2680" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2684" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2688" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2692" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2696" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2700" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2704" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2712" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2720" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2728" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2736" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2740" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2748" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2752" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2756" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2760" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2764" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2772" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2776" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2780" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2788" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2828" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2832" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2836" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2840" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2844" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2848" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2852" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2856" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2860" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2864" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2872" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2880" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2892" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2896" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2900" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2904" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2908" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2912" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2924" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2936" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2948" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2952" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2956" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2976" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2980" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2984" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2988" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2996" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3000" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3004" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3012" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3020" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3028" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3036" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3040" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3048" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3052" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3056" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3060" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3064" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3072" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3076" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3080" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3088" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3128" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3132" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3136" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3140" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3144" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3148" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3152" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3156" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3160" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3164" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3172" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3180" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3192" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3196" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3200" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3204" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3208" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3212" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3224" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3236" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3248" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3252" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3256" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3272" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3276" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3280" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3284" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3296" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3300" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3312" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3320" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3328" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3336" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3340" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3348" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3352" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3356" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3360" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3364" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3372" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3376" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3380" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3388" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3428" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3432" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3436" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3440" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3444" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3448" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3452" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3456" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3460" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3464" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3472" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3480" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3492" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3496" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3500" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3504" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3512" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3548" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3552" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3556" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3572" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3573" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3577" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3581" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3585" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3586" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3588" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3592" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3596" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3604" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3612" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3620" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3628" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3644" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3648" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3656" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3660" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3668" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3676" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3680" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3684" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3732" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3740" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3744" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3748" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3752" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3756" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3760" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3764" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3772" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3780" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3792" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3796" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3800" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3804" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3812" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3848" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3852" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3856" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3872" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3873" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3877" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3881" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3885" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3886" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3888" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3892" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3896" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3904" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3912" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3920" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3928" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3936" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3940" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3948" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3952" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3956" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3960" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3964" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3972" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3976" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3980" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3988" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4028" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4032" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4036" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4040" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4044" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4048" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4052" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4056" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4060" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4064" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4072" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4080" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4092" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4096" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4100" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4104" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4112" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4148" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4152" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4156" Vartype="Float" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4180" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4184" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4188" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4192" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4196" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4200" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4204" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4212" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4220" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4228" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4236" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4240" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4248" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4252" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4256" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4260" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4264" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4272" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4276" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4280" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4288" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4328" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4332" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4336" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4340" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4344" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4348" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4352" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4356" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4360" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4364" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4372" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4380" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4392" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4396" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4400" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4404" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4412" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4448" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4452" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4456" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4472" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4473" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4477" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4481" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4485" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4486" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4488" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4492" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4496" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4504" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4512" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4520" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4528" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4544" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4548" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4556" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4560" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4564" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4568" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4576" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4580" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4584" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4588" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4628" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4632" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4636" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4640" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4644" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4648" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4652" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4656" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4660" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4664" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4672" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4680" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4692" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4696" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4700" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4704" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4712" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4748" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4752" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4756" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4772" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4773" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4777" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4781" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4785" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4786" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4788" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4792" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4796" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4804" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4812" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4820" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4828" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4836" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4840" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4848" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4852" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4856" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4860" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4864" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4872" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4876" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4880" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4888" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4928" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4932" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4936" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4940" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4944" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4948" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4952" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4956" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4960" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4964" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4972" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4980" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4996" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5000" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5004" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5012" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5048" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5052" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5056" Vartype="Float" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5080" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5084" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5088" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5092" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5096" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5100" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5104" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5112" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5120" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5128" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5136" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5140" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="5148" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5152" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5156" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5160" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5164" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5172" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5180" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5188" Vartype="4 Bytes" Bytesize="4" RLECount="20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5268" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5272" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5316" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5320" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5364" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5368" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5408" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5412" Vartype="4 Bytes" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5460" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5464" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5508" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5512" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5552" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5556" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5600" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5604" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5608" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5648" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5652" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5656" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5696" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5704" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5748" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5752" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5796" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5800" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5840" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5848" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5888" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5892" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5896" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5936" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="5940" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="5944" Vartype="4 Bytes" Bytesize="4" RLECount="1458" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11776" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11780" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11784" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11804" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11808" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11812" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11816" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11820" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11824" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11828" Vartype="Float" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11852" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11856" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11864" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11876" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11880" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11900" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11904" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11908" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11912" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11916" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11932" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11936" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11940" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11944" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11948" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11968" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11972" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11976" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11980" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11984" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="11992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer">
          <Structure Name="Autocreated from 3F7FF3CA" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="10" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="14" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="30" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="34" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="38" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="42" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="46" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="50" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="54" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="58" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="62" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="66" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="70" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="74" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="78" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="82" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="94" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="98" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="110" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="114" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="118" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="122" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="134" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="138" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="142" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="146" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="150" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="154" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="158" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="166" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="170" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="174" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="186" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="190" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="194" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="198" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="206" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="210" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="214" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="218" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="226" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Hexadecimal"/>
              <Element Offset="246" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="250" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="258" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="262" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="274" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="286" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="290" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="294" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="298" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="302" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="306" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="310" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="314" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="322" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="326" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="330" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="342" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="346" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="350" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="354" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="366" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="374" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="382" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="386" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="394" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="398" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="406" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="410" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="418" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="422" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="426" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="430" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="438" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="442" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="450" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="454" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="458" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="462" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="470" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="474" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="478" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="482" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="494" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="498" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="502" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="506" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="514" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="518" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="522" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Hexadecimal"/>
              <Element Offset="562" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="566" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="578" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="582" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="598" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="602" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="610" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="614" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="622" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="626" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="634" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="642" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="646" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="650" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="654" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="662" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="666" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="674" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="678" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="682" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="686" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="690" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="698" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="702" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Hexadecimal"/>
              <Element Offset="722" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="726" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="730" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="734" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="738" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="742" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="746" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="754" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="758" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="762" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="766" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="770" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="774" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="778" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="782" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="786" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="790" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="798" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="802" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Hexadecimal"/>
              <Element Offset="826" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="830" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="834" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="838" Vartype="String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
              <Element Offset="843" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="844" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="846" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="854" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="858" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="862" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="866" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="870" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="871" Vartype="String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
              <Element Offset="876" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="878" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="882" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="886" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="890" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="894" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="898" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="902" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="906" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Hexadecimal"/>
              <Element Offset="926" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="930" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Hexadecimal"/>
              <Element Offset="950" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="954" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="958" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="962" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="966" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="970" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="974" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="978" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="982" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="986" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="990" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="994" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="998" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1002" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1006" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1014" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1018" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1034" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1038" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1042" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1046" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1050" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1054" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1058" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1062" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1066" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1070" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1074" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1078" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1082" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1086" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1090" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1098" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1102" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1106" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1114" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1118" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1122" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1130" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1134" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1138" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1150" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1158" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1162" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1174" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1178" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1186" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1190" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1194" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1198" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1202" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1210" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1214" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1218" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1222" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1226" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1230" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1234" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1246" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1250" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1258" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1262" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1266" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1270" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1274" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1278" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Hexadecimal"/>
              <Element Offset="1302" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1306" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1310" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1314" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1322" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1326" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1330" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1334" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1338" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1346" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1350" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1354" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1358" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1362" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1370" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1374" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1378" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1382" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1386" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1390" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1394" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1398" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1402" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1410" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1414" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1418" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1422" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1430" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1434" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1438" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1442" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1446" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1450" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1454" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1458" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1462" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1466" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1470" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1474" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1478" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1482" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1490" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1494" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1498" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1502" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1506" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1514" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1518" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1522" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1530" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1534" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1538" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1550" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1554" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1558" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1562" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1570" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1574" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1578" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1582" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1586" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1590" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1602" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1606" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1610" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1614" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1618" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1622" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1626" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1630" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1634" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1638" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1642" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1646" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1650" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1654" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1662" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1666" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1670" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1674" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1682" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1686" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1690" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1698" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1702" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1706" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1710" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1714" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1718" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1722" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1726" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1730" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1734" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1738" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1746" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1750" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1754" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1758" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1766" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1770" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1774" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1778" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1782" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1794" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1798" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1802" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1806" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1810" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1814" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1818" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1822" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1826" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1830" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1834" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1842" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1850" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1851" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1855" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1858" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1862" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1866" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1870" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1874" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1878" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1886" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1890" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="1898" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1902" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1906" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1910" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1922" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1926" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="1938" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1942" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1946" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1950" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1954" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1970" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1974" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="1990" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1994" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="1998" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2002" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2006" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2010" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2014" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2018" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2030" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2034" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2038" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2050" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2054" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2058" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2074" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2082" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2090" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2094" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2106" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2114" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2118" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2122" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2126" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2134" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2142" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2146" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2150" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2154" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2162" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2174" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2186" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2190" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2194" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2198" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2206" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2210" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2214" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2226" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2234" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2238" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2242" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2246" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2254" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2262" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2266" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2274" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2278" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2294" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2302" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2306" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2310" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2318" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2322" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2326" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2330" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2334" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2338" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2342" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2346" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2350" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2358" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2362" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2366" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2370" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2378" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2382" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2386" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2390" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2394" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2398" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2402" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2410" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2414" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2418" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2422" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2434" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2438" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2450" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2454" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2458" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2462" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2466" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2470" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2474" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2478" Vartype="String" Bytesize="7" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2485" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2486" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2498" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2506" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2514" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2518" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2522" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2530" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2538" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2542" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2546" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2550" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2554" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2558" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2562" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2566" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2578" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2586" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2590" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2594" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2598" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2606" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2610" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2614" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2618" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2622" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2630" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2634" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2638" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2642" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2654" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2658" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2662" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2670" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2674" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2678" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2682" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2686" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2698" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2702" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2718" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2722" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2726" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2730" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2734" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2738" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="2750" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2754" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2758" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2762" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2766" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2770" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Hexadecimal"/>
              <Element Offset="2790" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2794" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2798" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2802" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2806" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2810" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2814" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2818" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2822" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2826" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2834" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2838" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2854" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2858" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2862" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2866" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2870" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2874" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2878" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2882" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2886" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2890" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2894" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2898" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2902" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2906" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2910" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2918" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2926" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="2930" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2938" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2939" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2943" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2946" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Hexadecimal"/>
              <Element Offset="2974" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2978" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2986" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="2994" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="2998" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3002" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3003" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3007" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3010" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3018" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3022" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3026" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3034" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3038" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3042" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3046" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3050" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3058" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3062" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3066" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3074" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3078" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3086" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3090" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3094" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3098" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3099" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3103" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3106" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3114" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3118" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3122" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3126" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3130" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3138" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3142" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3146" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3150" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3154" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3170" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3174" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3178" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3182" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3186" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3190" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3194" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3198" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3202" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3206" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3210" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3214" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3226" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3230" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3234" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3238" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3242" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3250" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3254" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3258" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3262" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3266" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3270" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3274" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3278" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3282" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3286" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3290" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3294" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3298" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3302" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3306" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3314" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3318" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3322" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3326" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3334" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3338" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3342" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3346" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3350" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3354" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3358" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3362" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3366" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3370" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3374" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3378" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3382" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3386" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3390" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3394" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3398" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3402" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3406" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3410" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3414" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3418" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3426" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3438" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3442" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3446" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3450" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3454" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3458" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3462" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3466" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3470" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3478" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3482" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3486" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3494" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3498" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3502" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3514" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3518" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3522" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3526" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3530" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3534" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3538" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3542" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3546" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3550" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3554" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3558" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3566" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3570" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3574" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3578" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3586" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3590" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3594" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3598" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3602" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3614" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3618" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3622" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3626" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3630" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3634" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3638" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3646" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3650" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3654" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3662" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3666" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3670" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3674" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3678" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3682" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3686" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3694" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3698" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3714" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3718" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3722" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3726" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3730" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3734" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3746" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3750" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3754" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3758" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3762" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3766" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3778" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3782" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3794" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3798" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3802" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3806" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3822" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3826" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3830" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3842" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3846" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3850" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
              <Element Offset="3862" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3866" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3868" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3870" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3886" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3890" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3902" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3910" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3914" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3922" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3930" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3938" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3942" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3946" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="3954" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3958" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3966" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3970" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="3974" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3978" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3986" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3990" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="3994" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="4010" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4014" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="4022" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4026" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4034" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="4038" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4046" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4058" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
              <Element Offset="4066" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4074" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4078" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4082" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
              <Element Offset="4086" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="4094" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="11996" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12000" Vartype="Float" Bytesize="4" RLECount="23" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12092" Vartype="4 Bytes" Bytesize="4" RLECount="46" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12276" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12280" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12284" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12288" Vartype="4 Bytes" Bytesize="4" RLECount="56" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12512" Vartype="4 Bytes" Bytesize="4" Description="hand1?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12516" Vartype="4 Bytes" Bytesize="4" RLECount="83" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12848" Vartype="4 Bytes" Bytesize="4" Description="grab" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12852" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12920" Vartype="Float" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12968" Vartype="4 Bytes" Bytesize="4" RLECount="35" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13108" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13116" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13132" Vartype="4 Bytes" Bytesize="4" Description="conciousness" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13136" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13140" Vartype="4 Bytes" Bytesize="4" Description="torse" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13144" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13148" Vartype="4 Bytes" Bytesize="4" Description="head" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13152" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13156" Vartype="4 Bytes" Bytesize="4" Description="left arm" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13160" Vartype="4 Bytes" Bytesize="4" RLECount="130" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13680" Vartype="4 Bytes" Bytesize="4" Description="old zombie" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13684" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="item" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" Description="body?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" Description="frozen?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" Description="owner" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="4 Bytes" Bytesize="4" Description="physical body?" DisplayMethod="Hexadecimal"/>
        <Element Offset="76" Vartype="Float" Bytesize="4" RLECount="25" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="180" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="188" Vartype="Float" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="220" Vartype="4 Bytes" Bytesize="4" RLECount="14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="Float" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="320" Vartype="4 Bytes" Bytesize="4" RLECount="46" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="item type" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="String" Bytesize="32" DisplayMethod="Unsigned Integer"/>
        <Element Offset="47" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="4 Bytes" Bytesize="4" RLECount="14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="108" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="124" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="Float" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="136" Vartype="Float" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="188" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="Float" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="4 Bytes" Bytesize="4" RLECount="643" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2848" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2852" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2856" Vartype="Byte" Bytesize="1" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2864" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2868" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2876" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2880" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2884" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2888" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2892" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2896" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2904" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2908" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2912" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2920" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2924" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2928" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2932" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2936" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2940" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2944" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2948" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2952" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2956" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2960" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="105" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3388" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3392" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3396" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3400" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="physical body" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Float" Bytesize="4" RLECount="16" DisplayMethod="Unsigned Integer"/>
        <Element Offset="61" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="66" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="67" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="68" Vartype="Float" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="113" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="114" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="117" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="118" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="119" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Float" Bytesize="4" RLECount="13" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="vehicle" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="76" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="108" Vartype="Double" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="140" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="188" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="196" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="204" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="220" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="224" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="244" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="252" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="300" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="308" Vartype="4 Bytes" Bytesize="4" RLECount="3399" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13904" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13912" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13920" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="13924" Vartype="4 Bytes" Bytesize="4" RLECount="162" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14572" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14580" Vartype="Byte" Bytesize="1" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14582" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14584" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14588" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14600" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14604" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14608" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14616" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14624" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14632" Vartype="4 Bytes" Bytesize="4" RLECount="26" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14736" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14740" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14748" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14752" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14768" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14776" Vartype="Float" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14800" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14804" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14812" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14816" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14820" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14824" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14828" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14832" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14836" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="14840" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14848" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="14852" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14860" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14864" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14876" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14920" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14924" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14940" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14956" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14972" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14976" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14984" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14988" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14992" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="14996" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15000" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15004" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15008" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15012" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15020" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15024" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15032" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15036" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15048" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15092" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15096" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15112" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15120" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15132" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15136" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15144" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15148" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15156" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15160" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15164" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15168" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15172" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15180" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="15184" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15188" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15192" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="15196" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15204" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15208" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15220" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15264" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15268" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15284" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15300" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15304" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15308" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15316" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15320" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15328" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15332" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15336" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15340" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15344" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15348" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15352" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="15356" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15360" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15364" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="15368" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15376" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15380" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="15392" Vartype="4 Bytes" Bytesize="4" RLECount="1291" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20556" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20564" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20568" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20572" Vartype="Float" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20620" Vartype="4 Bytes" Bytesize="4" RLECount="21" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"subrosadedicated_34c.exe"+645BA</Address>
      <Comment>^ yaw
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
